{"version":3,"file":"engine.mjs","sources":["../../../../../../modules/common/engine/src/engine.ts","../../../../../../modules/common/engine/engine.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { ApplicationRef, StaticProvider, Type } from '@angular/core';\nimport {\n  INITIAL_CONFIG,\n  renderApplication,\n  renderModule,\n  ɵSERVER_CONTEXT,\n} from '@angular/platform-server';\nimport { ɵInlineCriticalCssProcessor as InlineCriticalCssProcessor } from '@nguniversal/common/tools';\nimport * as fs from 'fs';\nimport { dirname, resolve } from 'path';\nimport { URL } from 'url';\n\nconst SSG_MARKER_REGEXP = /ng-server-context=[\"']\\w*\\|?ssg\\|?\\w*[\"']/;\n\nexport interface RenderOptions {\n  bootstrap?: Type<{}> | (() => Promise<ApplicationRef>);\n  providers?: StaticProvider[];\n  url?: string;\n  document?: string;\n  documentFilePath?: string;\n  /**\n   * Reduce render blocking requests by inlining critical CSS.\n   * Defaults to true.\n   */\n  inlineCriticalCss?: boolean;\n  /**\n   * Base path location of index file.\n   * Defaults to the 'documentFilePath' dirname when not provided.\n   */\n  publicPath?: string;\n}\n\n/**\n * A common rendering engine utility. This abstracts the logic\n * for handling the platformServer compiler, the module cache, and\n * the document loader\n */\nexport class CommonEngine {\n  private readonly templateCache = new Map<string, string>();\n  private readonly inlineCriticalCssProcessor: InlineCriticalCssProcessor;\n  private readonly pageIsSSG = new Map<string, boolean>();\n\n  constructor(\n    private bootstrap?: Type<{}> | (() => Promise<ApplicationRef>),\n    private providers: StaticProvider[] = [],\n  ) {\n    this.inlineCriticalCssProcessor = new InlineCriticalCssProcessor({\n      minify: true,\n    });\n  }\n\n  /**\n   * Render an HTML document for a specific URL with specified\n   * render options\n   */\n  async render(opts: RenderOptions): Promise<string> {\n    const { inlineCriticalCss = true } = opts;\n\n    if (opts.publicPath && opts.documentFilePath && opts.url !== undefined) {\n      const url = new URL(opts.url);\n      // Remove leading forward slash.\n      const pathname = url.pathname.substring(1);\n      const pagePath = resolve(opts.publicPath, pathname, 'index.html');\n\n      if (pagePath !== resolve(opts.documentFilePath)) {\n        // View path doesn't match with prerender path.\n        const pageIsSSG = this.pageIsSSG.get(pagePath);\n        if (pageIsSSG === undefined) {\n          if (await exists(pagePath)) {\n            const content = await fs.promises.readFile(pagePath, 'utf-8');\n            const isSSG = SSG_MARKER_REGEXP.test(content);\n            this.pageIsSSG.set(pagePath, isSSG);\n\n            if (isSSG) {\n              return content;\n            }\n          } else {\n            this.pageIsSSG.set(pagePath, false);\n          }\n        } else if (pageIsSSG) {\n          // Serve pre-rendered page.\n          return fs.promises.readFile(pagePath, 'utf-8');\n        }\n      }\n    }\n\n    // if opts.document dosen't exist then opts.documentFilePath must\n    const extraProviders: StaticProvider[] = [\n      { provide: ɵSERVER_CONTEXT, useValue: 'ssr' },\n      ...(opts.providers ?? []),\n      ...this.providers,\n    ];\n\n    let doc = opts.document;\n    if (!doc && opts.documentFilePath) {\n      doc = await this.getDocument(opts.documentFilePath);\n    }\n\n    if (doc) {\n      extraProviders.push({\n        provide: INITIAL_CONFIG,\n        useValue: {\n          document: inlineCriticalCss\n            ? // Workaround for https://github.com/GoogleChromeLabs/critters/issues/64\n              doc.replace(\n                / media=\"print\" onload=\"this\\.media=['&apos;].+?['&apos;]\"(?: ngCspMedia=\".+\")?><noscript><link .+?><\\/noscript>/g,\n                '>',\n              )\n            : doc,\n          url: opts.url,\n        },\n      });\n    }\n\n    const moduleOrFactory = this.bootstrap || opts.bootstrap;\n    if (!moduleOrFactory) {\n      throw new Error('A module or bootstrap option must be provided.');\n    }\n\n    const html = await (isBootstrapFn(moduleOrFactory)\n      ? renderApplication(moduleOrFactory, { platformProviders: extraProviders })\n      : renderModule(moduleOrFactory, { extraProviders }));\n\n    if (!inlineCriticalCss) {\n      return html;\n    }\n\n    const { content, errors, warnings } = await this.inlineCriticalCssProcessor.process(html, {\n      outputPath: opts.publicPath ?? (opts.documentFilePath ? dirname(opts.documentFilePath) : ''),\n    });\n\n    // eslint-disable-next-line no-console\n    warnings?.forEach((m) => console.warn(m));\n    // eslint-disable-next-line no-console\n    errors?.forEach((m) => console.error(m));\n\n    return content;\n  }\n\n  /** Retrieve the document from the cache or the filesystem */\n  private async getDocument(filePath: string): Promise<string> {\n    let doc = this.templateCache.get(filePath);\n\n    if (!doc) {\n      doc = await fs.promises.readFile(filePath, 'utf-8');\n      this.templateCache.set(filePath, doc);\n    }\n\n    return doc;\n  }\n}\n\nasync function exists(path: fs.PathLike): Promise<boolean> {\n  try {\n    await fs.promises.access(path, fs.constants.F_OK);\n\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isBootstrapFn(value: unknown): value is () => Promise<ApplicationRef> {\n  // We can differentiate between a module and a bootstrap function by reading `cmp`:\n  return typeof value === 'function' && !('ɵmod' in value);\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["InlineCriticalCssProcessor"],"mappings":"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"}