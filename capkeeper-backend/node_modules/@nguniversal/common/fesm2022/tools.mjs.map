{"version":3,"file":"tools.mjs","sources":["../../../../../../modules/common/tools/src/inline-css-processor.ts","../../../../../../modules/common/tools/tools.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport Critters from 'critters';\nimport * as fs from 'fs';\n\n/**\n * Pattern used to extract the media query set by Critters in an `onload` handler.\n */\nconst MEDIA_SET_HANDLER_PATTERN = /^this\\.media=[&apos;\"'](.*)[&apos;\"'];?$/;\n\n/**\n * Name of the attribute used to save the Critters media query so it can be re-assigned on load.\n */\nconst CSP_MEDIA_ATTR = 'ngCspMedia';\n\n/**\n * Script text used to change the media value of the link tags.\n */\nconst LINK_LOAD_SCRIPT_CONTENT = [\n  `(() => {`,\n  // Save the `children` in a variable since they're a live DOM node collection.\n  // We iterate over the direct descendants, instead of going through a `querySelectorAll`,\n  // because we know that the tags will be directly inside the `head`.\n  `  const children = document.head.children;`,\n  // Declare `onLoad` outside the loop to avoid leaking memory.\n  // Can't be an arrow function, because we need `this` to refer to the DOM node.\n  `  function onLoad() {this.media = this.getAttribute('${CSP_MEDIA_ATTR}');}`,\n  // Has to use a plain for loop, because some browsers don't support\n  // `forEach` on `children` which is a `HTMLCollection`.\n  `  for (let i = 0; i < children.length; i++) {`,\n  `    const child = children[i];`,\n  `    child.hasAttribute('${CSP_MEDIA_ATTR}') && child.addEventListener('load', onLoad);`,\n  `  }`,\n  `})();`,\n].join('\\n');\n\nexport interface InlineCriticalCssProcessOptions {\n  outputPath?: string;\n}\n\nexport interface InlineCriticalCssProcessorOptions {\n  minify?: boolean;\n  deployUrl?: string;\n}\n\nexport interface InlineCriticalCssResult {\n  content: string;\n  warnings?: string[];\n  errors?: string[];\n}\n\n/** Partial representation of an `HTMLElement`. */\ninterface PartialHTMLElement {\n  getAttribute(name: string): string | null;\n  setAttribute(name: string, value: string): void;\n  hasAttribute(name: string): boolean;\n  removeAttribute(name: string): void;\n  appendChild(child: PartialHTMLElement): void;\n  textContent: string;\n  tagName: string | null;\n  children: PartialHTMLElement[];\n  next: PartialHTMLElement | null;\n  prev: PartialHTMLElement | null;\n}\n\n/** Partial representation of an HTML `Document`. */\ninterface PartialDocument {\n  head: PartialHTMLElement;\n  createElement(tagName: string): PartialHTMLElement;\n  querySelector(selector: string): PartialHTMLElement | null;\n}\n\n/** Signature of the `Critters.embedLinkedStylesheet` method. */\ntype EmbedLinkedStylesheetFn = (\n  link: PartialHTMLElement,\n  document: PartialDocument,\n) => Promise<unknown>;\n\nclass CrittersExtended extends Critters {\n  readonly warnings: string[] = [];\n  readonly errors: string[] = [];\n  private initialEmbedLinkedStylesheet: EmbedLinkedStylesheetFn;\n  private addedCspScriptsDocuments = new WeakSet<PartialDocument>();\n  private documentNonces = new WeakMap<PartialDocument, string | null>();\n\n  // Inherited from `Critters`, but not exposed in the typings.\n  protected embedLinkedStylesheet!: EmbedLinkedStylesheetFn;\n\n  constructor(\n    readonly optionsExtended: InlineCriticalCssProcessorOptions & InlineCriticalCssProcessOptions,\n    private readonly resourceCache: Map<string, string>,\n  ) {\n    super({\n      logger: {\n        warn: (s: string) => this.warnings.push(s),\n        error: (s: string) => this.errors.push(s),\n        info: () => {},\n      },\n      logLevel: 'warn',\n      path: optionsExtended.outputPath,\n      publicPath: optionsExtended.deployUrl,\n      compress: !!optionsExtended.minify,\n      pruneSource: false,\n      reduceInlineStyles: false,\n      mergeStylesheets: false,\n      // Note: if `preload` changes to anything other than `media`, the logic in\n      // `embedLinkedStylesheetOverride` will have to be updated.\n      preload: 'media',\n      noscriptFallback: true,\n      inlineFonts: true,\n    });\n\n    // We can't use inheritance to override `embedLinkedStylesheet`, because it's not declared in\n    // the `Critters` .d.ts which means that we can't call the `super` implementation. TS doesn't\n    // allow for `super` to be cast to a different type.\n    this.initialEmbedLinkedStylesheet = this.embedLinkedStylesheet;\n    this.embedLinkedStylesheet = this.embedLinkedStylesheetOverride;\n  }\n\n  public override async readFile(path: string): Promise<string> {\n    let resourceContent = this.resourceCache.get(path);\n    if (resourceContent === undefined) {\n      resourceContent = await fs.promises.readFile(path, 'utf-8');\n      this.resourceCache.set(path, resourceContent);\n    }\n\n    return resourceContent;\n  }\n\n  /**\n   * Override of the Critters `embedLinkedStylesheet` method\n   * that makes it work with Angular's CSP APIs.\n   */\n  private embedLinkedStylesheetOverride: EmbedLinkedStylesheetFn = async (link, document) => {\n    const returnValue = await this.initialEmbedLinkedStylesheet(link, document);\n    const cspNonce = this.findCspNonce(document);\n\n    if (cspNonce) {\n      const crittersMedia = link.getAttribute('onload')?.match(MEDIA_SET_HANDLER_PATTERN);\n\n      if (crittersMedia) {\n        // If there's a Critters-generated `onload` handler and the file has an Angular CSP nonce,\n        // we have to remove the handler, because it's incompatible with CSP. We save the value\n        // in a different attribute and we generate a script tag with the nonce that uses\n        // `addEventListener` to apply the media query instead.\n        link.removeAttribute('onload');\n        link.setAttribute(CSP_MEDIA_ATTR, crittersMedia[1]);\n        this.conditionallyInsertCspLoadingScript(document, cspNonce);\n      }\n\n      link.prev?.setAttribute('nonce', cspNonce);\n    }\n\n    return returnValue;\n  };\n\n  /**\n   * Finds the CSP nonce for a specific document.\n   */\n  private findCspNonce(document: PartialDocument): string | null {\n    if (this.documentNonces.has(document)) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return this.documentNonces.get(document)!;\n    }\n\n    // HTML attribute are case-insensitive, but the parser used by Critters is case-sensitive.\n    const nonceElement = document.querySelector('[ngCspNonce], [ngcspnonce]');\n    const cspNonce =\n      nonceElement?.getAttribute('ngCspNonce') || nonceElement?.getAttribute('ngcspnonce') || null;\n\n    this.documentNonces.set(document, cspNonce);\n\n    return cspNonce;\n  }\n\n  /**\n   * Inserts the `script` tag that swaps the critical CSS at runtime,\n   * if one hasn't been inserted into the document already.\n   */\n  private conditionallyInsertCspLoadingScript(document: PartialDocument, nonce: string): void {\n    if (this.addedCspScriptsDocuments.has(document)) {\n      return;\n    }\n\n    if (document.head.textContent.includes(LINK_LOAD_SCRIPT_CONTENT)) {\n      // Script was already added during the build.\n      this.addedCspScriptsDocuments.add(document);\n\n      return;\n    }\n\n    const script = document.createElement('script');\n    script.setAttribute('nonce', nonce);\n    script.textContent = LINK_LOAD_SCRIPT_CONTENT;\n\n    // Append the script to the head since it needs to\n    // run as early as possible, after the `link` tags.\n    document.head.appendChild(script);\n    this.addedCspScriptsDocuments.add(document);\n  }\n}\n\nexport class InlineCriticalCssProcessor {\n  private readonly resourceCache = new Map<string, string>();\n\n  constructor(protected readonly options: InlineCriticalCssProcessorOptions) {}\n\n  async process(\n    html: string,\n    options: InlineCriticalCssProcessOptions,\n  ): Promise<InlineCriticalCssResult> {\n    const critters = new CrittersExtended({ ...this.options, ...options }, this.resourceCache);\n    const content = await critters.process(html);\n\n    return {\n      content,\n      errors: critters.errors.length ? critters.errors : undefined,\n      warnings: critters.warnings.length ? critters.warnings : undefined,\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}