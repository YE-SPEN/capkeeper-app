{"version":3,"file":"123.9f38476ae35765a9.js","mappings":"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","names":["i0","team_r1","picture","team_name","pick_r2","player_first_name","_c2","player_last_name","length","player_position","player_short_code","ctx_r2","getTeamImage","DraftComponent_div_7_div_1_ng_container_1_span_3_Template","DraftComponent_div_7_div_1_ng_container_1_span_4_Template","DraftComponent_div_7_div_1_ng_container_1_span_6_Template","DraftComponent_div_7_div_1_ng_container_1_span_7_Template","DraftComponent_div_7_div_1_ng_container_1_span_9_Template","DraftComponent_div_7_div_1_ng_container_1_span_10_Template","DraftComponent_div_7_div_1_ng_container_1_span_14_Template","_c1","assigned_to","owned_by","round","position","pick_number","DraftComponent_div_7_div_1_ng_container_1_Template","getPickInfo","team_r4","team_id","row_r5","DraftComponent_div_7_div_1_Template","rookie_order","team_r6","pick_r7","DraftComponent_div_13_div_1_ng_container_1_span_3_Template","DraftComponent_div_13_div_1_ng_container_1_span_4_Template","DraftComponent_div_13_div_1_ng_container_1_span_6_Template","DraftComponent_div_13_div_1_ng_container_1_span_7_Template","DraftComponent_div_13_div_1_ng_container_1_span_9_Template","DraftComponent_div_13_div_1_ng_container_1_span_10_Template","DraftComponent_div_13_div_1_ng_container_1_span_14_Template","DraftComponent_div_13_div_1_ng_container_1_Template","team_r8","row_r9","DraftComponent_div_13_div_1_Template","general_order","DraftComponent","constructor","playerService","globalService","route","router","http","this","year","ngOnInit","_this","_asyncToGenerator","params","firstValueFrom","paramMap","league_id","get","teams","initializeLeague","url","error","console","league","current_season","getDraftByYear","subscribe","response","rookie_picks","draft","filter","pick","type","general_picks","rookie_first_round","team","matchTeamByID","push","general_first_round","find","i1","i2","i3","i4","selectors","decls","vars","consts","template","rf","ctx","DraftComponent_div_6_Template","DraftComponent_div_7_Template","DraftComponent_div_12_Template","DraftComponent_div_13_Template","_c0","rookie_draft_length","general_draft_length","_r1","ctx_r1","deselectAllUsers","_r3","selectAllUsers","$event","user_r5","_r4","$implicit","toggleUserSelect","user_name","isSelected","first_name","last_name","LeagueActivityComponent_div_14_a_3_Template","LeagueActivityComponent_div_14_a_4_Template","LeagueActivityComponent_div_14_li_7_Template","selected_users","users","asset_r6","retention_perc","LeagueActivityComponent_tr_75_div_20_div_1_li_4_ng_container_1_span_4_Template","short_code","LeagueActivityComponent_tr_75_div_20_div_1_li_4_ng_container_2_span_2_Template","capitalizeFirstLetter","week","LeagueActivityComponent_tr_75_div_20_div_1_li_4_ng_container_1_Template","LeagueActivityComponent_tr_75_div_20_div_1_li_4_ng_container_2_Template","LeagueActivityComponent_tr_75_div_20_div_1_li_4_ng_container_3_Template","asset_type","LeagueActivityComponent_tr_75_div_20_div_1_li_4_Template","getTeamName","team_r7","getAssetsByTeam","activity_r8","trade_id","LeagueActivityComponent_tr_75_div_20_div_1_Template","getTradePartners","LeagueActivityComponent_tr_75__svg_path_4_Template","LeagueActivityComponent_tr_75__svg_path_5_Template","LeagueActivityComponent_tr_75__svg_path_6_Template","LeagueActivityComponent_tr_75__svg_path_7_Template","LeagueActivityComponent_tr_75__svg_path_8_Template","LeagueActivityComponent_tr_75__svg_path_9_Template","LeagueActivityComponent_tr_75__svg_path_10_Template","LeagueActivityComponent_tr_75__svg_path_11_Template","LeagueActivityComponent_tr_75__svg_path_12_Template","LeagueActivityComponent_tr_75__svg_path_13_Template","LeagueActivityComponent_tr_75_div_17_Template","LeagueActivityComponent_tr_75_div_20_Template","_c3","action_type","message","includes","isNew","formatDateTime","date","time","getUser","user_id","formatActionType","page_r10","_r9","setPage","currentPage","LeagueActivityComponent","sortingService","teamService","userSelectOpen","searchKey","searchRangeInDays","start_date","getSearchDate","end_date","rangeIsCustom","activity_log","filtered_activity_log","trade_items","activityFilter","pageSize","tradeData","sortDirection","sortColumn","notifications","getActivitiesByDate","ngAfterViewInit","dropdownButton","document","getElementById","dropdownMenu","addEventListener","classList","remove","add","toggleUserSelectMenu","isOpen","days","today","Date","setDate","getDate","getFullYear","getMonth","toString","padStart","setDateRange","event","parseInt","target","value","setStartDate","setEndDate","getActivitiesByLeague","tradeItems","action_log","concatDateTimes","filterActivities","sort","totalPages","Math","ceil","map","activity","datetime","searchActivities","resetSearch","loggedInUser","log_out_date","log_out_time","user","action","inActivityTypeFilter","inUserFilter","toLowerCase","checked","selectedUser","previousPage","nextPage","page","getPageStart","getPageEnd","min","generatePageArray","array","maxPage","i","max","setPageSize","size","teamIdsSet","Set","forEach","item","traded_to","Array","from","asset","viewQuery","LeagueActivityComponent_div_14_Template","toggleSort","LeagueActivityComponent__svg_path_64_Template","LeagueActivityComponent__svg_path_65_Template","LeagueActivityComponent__svg_path_66_Template","LeagueActivityComponent__svg_path_71_Template","LeagueActivityComponent__svg_path_72_Template","LeagueActivityComponent__svg_path_73_Template","LeagueActivityComponent_tr_75_Template","LeagueActivityComponent_li_90_Template","team_r3","_r5","player_r6","ctx_r6","addPlayerModal_r8","openModal","validatePickup","contract_status","aav_current","years_left_current","getTeamID","PlayerDatabaseComponent_tr_107_div_2_Template","editPlayerModal_r9","PlayerDatabaseComponent_tr_107_span_12_Template","PlayerDatabaseComponent_tr_107_div_16_Template","PlayerDatabaseComponent_tr_107_div_17_Template","PlayerDatabaseComponent_tr_107_span_22_Template","PlayerDatabaseComponent_tr_107_ng_container_29_Template","PlayerDatabaseComponent_tr_107_ng_template_30_Template","editContractModal_r10","logo","isRookie","unownedTemplate_r11","last_updated","updated_by","page_r13","_r12","team_r15","city","_r14","playerFormSubmit","closeModal","formData","PlayerDatabaseComponent_ng_template_139_option_39_Template","nhl_teams","isButtonDisabled","_c4","team_r17","selected","_r16","PlayerDatabaseComponent_ng_template_141_option_37_Template","pick_r20","asset_id","PlayerDatabaseComponent_ng_template_143_div_43_ng_container_7_option_1_Template","fa_picks","_r19","fa_to_use","PlayerDatabaseComponent_ng_template_143_div_43_ng_container_7_Template","PlayerDatabaseComponent_ng_template_143_div_43_ng_template_8_Template","noFaAvailable_r21","_r22","loggedInTeam","_r23","cap_space","_r18","PlayerDatabaseComponent_ng_template_143_div_38_Template","PlayerDatabaseComponent_ng_template_143_div_39_Template","PlayerDatabaseComponent_ng_template_143_h3_41_Template","PlayerDatabaseComponent_ng_template_143_h3_42_Template","PlayerDatabaseComponent_ng_template_143_div_43_Template","PlayerDatabaseComponent_ng_template_143_div_44_Template","PlayerDatabaseComponent_ng_template_143_div_45_Template","addPlayer","_c5","contractIsValid","capIsValid","faIsValid","_r25","addContract","_r26","aav_next","years_left_next","_r24","contractFormSubmit","PlayerDatabaseComponent_ng_template_145_div_21_Template","PlayerDatabaseComponent_ng_template_145_div_26_Template","expiry_status","addNextContract","routes","path","component","PlayerDatabaseComponent","modalService","toastService","filteredPlayers","statusFilter","positionFilter","teamFilter","maxSalary","warnings","formSubmitted","toastMessage","getAllPlayers","allPlayers","players","filterPlayers","fetchFAs","searchPlayers","getFAsByTeam","player_taken","faInRange","fa","setHours","twoDaysBefore","eightDaysAfter","expiryDate","expiry_date","player","inPosFilter","inStatusFilter","inTeamFilter","inSalaryFilter","clearFilter","isSkater","generateID","id","replace","log","roster_size","max_roster_size","rookie","payload","player_id","fa_used","getToday","post","next","updateTeamCap","recordAction","showToast","getAttribute","submissionData","setTimeout","resetForm","selectPlayer","modalRef","show","hide","i5","i6","i7","i8","newPlayerModal_r2","PlayerDatabaseComponent_option_54_Template","PlayerDatabaseComponent__svg_path_76_Template","PlayerDatabaseComponent__svg_path_77_Template","PlayerDatabaseComponent__svg_path_78_Template","PlayerDatabaseComponent__svg_path_85_Template","PlayerDatabaseComponent__svg_path_86_Template","PlayerDatabaseComponent__svg_path_87_Template","PlayerDatabaseComponent__svg_path_92_Template","PlayerDatabaseComponent__svg_path_93_Template","PlayerDatabaseComponent__svg_path_94_Template","PlayerDatabaseComponent__svg_path_101_Template","PlayerDatabaseComponent__svg_path_102_Template","PlayerDatabaseComponent__svg_path_103_Template","PlayerDatabaseComponent_tr_107_Template","PlayerDatabaseComponent_li_122_Template","PlayerDatabaseComponent_ng_template_139_Template","PlayerDatabaseComponent_ng_template_141_Template","PlayerDatabaseComponent_ng_template_143_Template","PlayerDatabaseComponent_ng_template_145_Template","LeagueModule","CommonModule","FormsModule","HttpClientModule","ModalModule","RouterModule","forChild"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/modules/league/components/draft/draft.component.html","./src/app/modules/league/components/draft/draft.component.ts","./src/app/modules/league/components/league-activity/league-activity.component.html","./src/app/modules/league/components/league-activity/league-activity.component.ts","./src/app/modules/league/components/player-database/player-database.component.html","./src/app/modules/league/league.module.ts","./src/app/modules/league/components/player-database/player-database.component.ts"],"sourcesContent":["<h1 class=\"font-bold text-2xl mb-6\">\r\n    Draft History\r\n</h1>\r\n\r\n<h2 class=\"font-semibold text-gray-500 text-lg mb-4\">\r\n    Rookie Draft ({{ year }})\r\n</h2>\r\n\r\n<div class=\"w-full\">\r\n    <div class=\"flex w-full\">\r\n        <div *ngFor=\"let team of rookie_order\" class=\"w-1/12 text-center p-2\">\r\n            <div class=\"max-w-[50px] mb-2 mx-auto block\">\r\n                <img [src]=\"team.picture\" class=\"w-[50px] h-[50px] rounded-full object-cover mx-auto\">\r\n            </div>\r\n            <h5 class=\"text-center items-center text-xs font-semibold tracking-tight text-gray-500 dark:text-white\">\r\n                {{ team.team_name }}\r\n            </h5>\r\n        </div>        \r\n    </div>    \r\n    <div *ngFor=\"let round of [].constructor(globalService.league?.rookie_draft_length); let row = index\" class=\"flex w-full\">\r\n        <div *ngFor=\"let team of rookie_order\" class=\"w-1/12\">\r\n            <!-- Get the pick information for the current team and round -->\r\n            <ng-container *ngIf=\"getPickInfo(team.team_id, row + 1, 'rookie') as pick\">\r\n                <div class=\"block p-1.5 border rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700\"\r\n                    [ngClass]=\"{\r\n                        'bg-white border-gray-200': pick.assigned_to === pick.owned_by && pick.player_first_name,\r\n                        'bg-yellow-100 border-yellow-300': pick.player_first_name && pick.assigned_to !== pick.owned_by,\r\n                        'bg-red-200 border-red-400': !pick.player_first_name\r\n                    }\">\r\n                    <!-- Display pick details -->\r\n                    <p class=\"text-xs font-semibold text-gray-500 dark:text-gray-400\">\r\n                        <span *ngIf=\"pick.player_first_name\">\r\n                            {{ pick.player_first_name }}\r\n                        </span>\r\n                        <span *ngIf=\"!pick.player_first_name\">\r\n                            &nbsp;\r\n                        </span>\r\n                    </p>\r\n                    <h5 class=\"text-sm font-bold tracking-tight text-gray-700 dark:text-white\">\r\n                        <span *ngIf=\"pick.player_first_name\" [ngClass]=\"{ 'text-[10px]': pick.player_last_name.length > 12 , 'text-xs': pick.player_last_name.length > 10 && pick.player_last_name.length <= 12 }\">\r\n                            {{ pick.player_last_name }}\r\n                        </span>\r\n\r\n                        <span *ngIf=\"!pick.player_first_name\" class=\"text-red-800\">\r\n                            Burned\r\n                        </span>\r\n                    </h5>\r\n                    <p class=\"text-[10px] mb-2 text-gray-500 dark:text-gray-400\">\r\n                        <span *ngIf=\"pick.player_first_name\">\r\n                            {{ pick.player_position }} - {{ pick.player_short_code }}\r\n                        </span>\r\n                        <span *ngIf=\"!pick.player_first_name\">\r\n                            &nbsp;\r\n                        </span>\r\n                    </p>\r\n                    \r\n                    <p class=\"text-[10px] text-gray-700 font-semibold dark:text-gray-400 flex items-center justify-between relative\">\r\n                        <span class=\"float-left\">\r\n                            {{ pick.round }}.{{ pick.position }} ({{ pick.pick_number }})\r\n                        </span>\r\n                        <span *ngIf=\"pick.assigned_to !== pick.owned_by\" \r\n                            class=\"relative float-right w-7 h-7 mr-0.5 rounded-full overflow-hidden\" \r\n                            style=\"top: -10px; margin-bottom: -13px;\">\r\n                            <img [src]=\"getTeamImage(pick)\" alt=\"Icon\" class=\"w-full h-full object-cover\">\r\n                        </span>\r\n                    </p>                   \r\n                    \r\n                </div>\r\n\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<h2 class=\"font-semibold text-gray-500 text-lg mb-4 mt-8\">\r\n    General Draft ({{ year }})\r\n</h2>\r\n\r\n<div class=\"w-full\">\r\n    <div class=\"flex w-full\">\r\n        <div *ngFor=\"let team of general_order\" class=\"w-1/12 text-center p-2\">\r\n            <div class=\"max-w-[50px] mb-2 mx-auto block\">\r\n                <img [src]=\"team.picture\" class=\"w-[50px] h-[50px] rounded-full object-cover mx-auto\">\r\n            </div>\r\n            <h5 class=\"text-center items-center text-xs font-semibold tracking-tight text-gray-500 dark:text-white\">\r\n                {{ team.team_name }}\r\n            </h5>\r\n        </div>        \r\n    </div>    \r\n    <div *ngFor=\"let round of [].constructor(globalService.league?.general_draft_length); let row = index\" class=\"flex w-full\">\r\n        <div *ngFor=\"let team of general_order\" class=\"w-1/12\">\r\n            <!-- Get the pick information for the current team and round -->\r\n            <ng-container *ngIf=\"getPickInfo(team.team_id, row + 1, 'general') as pick\">\r\n                <div class=\"block p-1.5 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700\"\r\n                    [ngClass]=\"{\r\n                        'bg-white border-gray-200': pick.assigned_to === pick.owned_by && pick.player_first_name,\r\n                        'bg-yellow-100 border-yellow-300': pick.player_first_name && pick.assigned_to !== pick.owned_by,\r\n                        'bg-red-200 border-red-400': !pick.player_first_name\r\n                    }\">\r\n                    <!-- Display pick details -->\r\n                    <p class=\"text-xs font-semibold text-gray-500 dark:text-gray-400\">\r\n                        <span *ngIf=\"pick.player_first_name\">\r\n                            {{ pick.player_first_name }}\r\n                        </span>\r\n                        <span *ngIf=\"!pick.player_first_name\">\r\n                            &nbsp;\r\n                        </span>\r\n                    </p>\r\n                    <h5 class=\"text-sm font-bold tracking-tight text-gray-700 dark:text-white\">\r\n                        <span *ngIf=\"pick.player_first_name\" [ngClass]=\"{ 'text-[10px]': pick.player_last_name.length > 12 , 'text-xs': pick.player_last_name.length > 10 && pick.player_last_name.length <= 12 }\">\r\n                            {{ pick.player_last_name }}\r\n                        </span>\r\n\r\n                        <span *ngIf=\"!pick.player_first_name\" class=\"text-red-800\">\r\n                            Burned\r\n                        </span>\r\n                    </h5>\r\n                    <p class=\"text-[10px] mb-2 text-gray-500 dark:text-gray-400\">\r\n                        <span *ngIf=\"pick.player_first_name\">\r\n                            {{ pick.player_position }} - {{ pick.player_short_code }}\r\n                        </span>\r\n                        <span *ngIf=\"!pick.player_first_name\">\r\n                            &nbsp;\r\n                        </span>\r\n                    </p>\r\n                    \r\n                    <p class=\"text-[10px] text-gray-700 font-semibold dark:text-gray-400 flex items-center justify-between relative\">\r\n                        <span class=\"float-left\">\r\n                            {{ pick.round }}.{{ pick.position }} ({{ pick.pick_number }})\r\n                        </span>\r\n                        <span *ngIf=\"pick.assigned_to !== pick.owned_by\" \r\n                            class=\"relative float-right w-7 h-7 mr-0.5 rounded-full overflow-hidden\" \r\n                            style=\"top: -10px; margin-bottom: -13px;\">\r\n                            <img [src]=\"getTeamImage(pick)\" alt=\"Icon\" class=\"w-full h-full object-cover\">\r\n                        </span>\r\n                    </p>                   \r\n                    \r\n                </div>\r\n\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>\r\n  \r\n  \r\n  \r\n  ","import { Component } from '@angular/core';\r\n\r\nimport { GlobalService } from '../../../../services/global.service';\r\nimport { PlayerService } from '../../../../services/player.service';\r\nimport { Team, Player, Draft_Pick } from '../../../../types';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-draft',\r\n  templateUrl: './draft.component.html',\r\n  styleUrl: './draft.component.css',\r\n  standalone: false\r\n})\r\n\r\nexport class DraftComponent {\r\n  league_id!: string;\r\n  year: number = 2024;\r\n  teams!: Team[];\r\n  rookie_order: Team[] = [];\r\n  rookie_picks!: Draft_Pick[];\r\n  general_order: Team[] = [];\r\n  general_picks!: Draft_Pick[];\r\n\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    public globalService: GlobalService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient\r\n  ) { }\r\n  \r\n  async ngOnInit(): Promise<void> {\r\n    const params = await firstValueFrom(this.route.paramMap);\r\n    this.league_id = params.get('league_id')!;\r\n\r\n    if (this.globalService.teams.length === 0) {\r\n      try {\r\n        await this.globalService.initializeLeague(this.league_id, this.router.url);\r\n      } catch (error) {\r\n        console.error('Error during league initialization:', error);\r\n        return; \r\n      }\r\n    }\r\n  \r\n    this.teams = this.globalService.teams;\r\n  \r\n    if (this.globalService.league) {\r\n      this.year = this.globalService.league.current_season;\r\n    }\r\n\r\n    this.playerService.getDraftByYear(this.league_id, this.year).subscribe((response) => {\r\n      this.rookie_picks = response.draft.filter((pick) => pick.type === 'rookie');\r\n      this.general_picks = response.draft.filter((pick) => pick.type === 'general');\r\n\r\n      const rookie_first_round = this.rookie_picks.filter((pick) => pick.round === 1);\r\n      for (let pick of rookie_first_round) {\r\n        const team = this.matchTeamByID(pick.assigned_to);\r\n        if (team) {\r\n          this.rookie_order.push(team);\r\n        }\r\n      }\r\n\r\n      const general_first_round = this.general_picks.filter((pick) => pick.round === 1);\r\n      for (let pick of general_first_round) {\r\n        const team = this.matchTeamByID(pick.assigned_to);\r\n        if (team) {\r\n          this.general_order.push(team);\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  matchTeamByID(team_id: string): Team | null {\r\n    for (let team of this.teams) {\r\n      if (team.team_id === team_id) {\r\n        return team\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getPickInfo(team_id: string, round: number, draft: string): Draft_Pick | undefined {\r\n    if (draft === 'rookie') {\r\n      return this.rookie_picks.find(pick => pick.round === round && pick.assigned_to === team_id);\r\n    }\r\n    return this.general_picks.find(pick => pick.round === round && pick.assigned_to === team_id);\r\n  }\r\n\r\n  getTeamImage(pick: Draft_Pick): string {\r\n      for (let team of this.teams) {\r\n        if (team.team_id === pick.owned_by) {\r\n          return team.picture\r\n        }\r\n      }\r\n      return '';\r\n  }\r\n\r\n}\r\n","<div class=\"flex items-center justify-between flex-column md:flex-row py-4 bg-white dark:bg-gray-900\">\r\n  <div class=\"w-full\">\r\n      <h1 class=\"font-bold text-2xl\">\r\n          Recent Activity\r\n      </h1>\r\n      <!-- Control Panel -->\r\n      <div class=\"flex flex-wrap items-start pt-2 space-y-4 md:space-y-0 md:space-x-4\">\r\n\r\n          <!-- User Multi-Select -->\r\n          <div class=\"relative flex flex-col w-full md:w-auto\" (mouseenter)=\"toggleUserSelectMenu(true)\" (mouseleave)=\"toggleUserSelectMenu(false)\">\r\n            <label for=\"dateFilter\" class=\"text-left block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">&nbsp;</label>\r\n            \r\n            <button id=\"dropdownBgHoverButton\" class=\"text-white bg-green-400 hover:bg-green-500 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:bg-green-400 dark:hover:bg-green-500 dark:focus:ring-green-300\" type=\"button\">\r\n              Select Users\r\n              <span class=\"inline-flex items-center justify-center w-5 h-5 ms-2 text-xs font-semibold text-green-800 bg-green-200 rounded-full\">\r\n                {{ selected_users.length }}\r\n              </span>\r\n              <svg class=\"w-2.5 h-2.5 ms-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 10 6\">\r\n                <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m1 1 4 4 4-4\"/>\r\n              </svg>\r\n            </button>\r\n        \r\n            <!-- Dropdown menu -->\r\n            <div *ngIf=\"userSelectOpen\" id=\"dropdownBgHover\" class=\"absolute z-10 w-64 bg-white rounded-lg shadow dark:bg-gray-700\" style=\"top: 100%; left: 10;\">\r\n              <ul class=\"p-3 space-y-1 text-sm text-gray-700 dark:text-gray-200\" aria-labelledby=\"dropdownBgHoverButton\">\r\n                <li>\r\n                  <a *ngIf=\"selected_users.length > 0\" (click)=\"deselectAllUsers()\" class=\"cursor-pointer font-medium text-green-500 dark:text-green-500 hover:underline\">\r\n                    Deselect All\r\n                  </a>\r\n                  <a *ngIf=\"selected_users.length === 0\" (click)=\"selectAllUsers()\" class=\"cursor-pointer font-medium text-green-500 dark:text-green-500 hover:underline\">\r\n                    Select All\r\n                  </a>\r\n                  <div class=\"py-1\">\r\n                    <hr class=\"border-0 border-t-2 border-gray-300\">   \r\n                  </div>\r\n                </li>  \r\n                <li *ngFor=\"let user of users\">\r\n                  <div class=\"flex items-center p-2 rounded hover:bg-gray-100 dark:hover:bg-gray-600\">\r\n                    <input             \r\n                      id=\"user-checkbox-{{ user.user_name }}\"\r\n                      type=\"checkbox\" \r\n                      [checked]=\"isSelected(user)\"\r\n                      (change)=\"toggleUserSelect($event, user)\"\r\n                      class=\"w-4 h-4 text-green-400 border-gray-300 rounded focus:ring-green-500 dark:focus:ring-green-500 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n                    >\r\n                    <label for=\"user-checkbox-{{ user.user_name }}\" class=\"w-full ms-2 text-sm font-medium text-gray-900 rounded dark:text-gray-300\">\r\n                      {{ user.first_name }} {{ user.last_name }}\r\n                    </label>\r\n                  </div>\r\n                </li>                                                                              \r\n              </ul>\r\n            </div>\r\n        </div> \r\n\r\n          <!-- Search Bar -->\r\n          <div class=\"w-full md:w-auto flex flex-col\">\r\n            <label for=\"table-search\" class=\"block mb-1 text-sm font-medium text-gray-900 dark:text-white\">&nbsp;</label>\r\n            <div class=\"relative\">\r\n              <div class=\"absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none\">\r\n                <svg class=\"w-4 h-4 text-gray-500 dark:text-gray-400\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 20 20\">\r\n                  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z\" />\r\n                </svg>\r\n              </div>\r\n              <input type=\"text\" [(ngModel)]=\"searchKey\" (input)=\"searchActivities()\" id=\"table-search-users\" class=\"block p-2.5 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-full md:w-80 bg-gray-50 focus:ring-green-400 focus:border-green-400 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-green-400 dark:focus:border-green-400\" placeholder=\"Search by keyword...\">\r\n            </div>\r\n          </div>             \r\n            \r\n          <!-- Action Filter -->\r\n          <div class=\"flex flex-col w-full md:w-auto\">\r\n              <label for=\"actionFilter\" class=\"text-left block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Filter by Action</label>\r\n              <select id=\"actionFilter\" [(ngModel)]=\"activityFilter\" (ngModelChange)=\"filterActivities()\" class=\"bg-gray-50 border border-green-400 text-gray-900 text-sm rounded-lg focus:ring-green-400 focus:border-green-400 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-green-400 dark:focus:border-green-400 min-w-[160px]\">\r\n                  <option value=\"all\">All Types</option>\r\n                  <option value=\"Add/Drop\">Add/Drops</option>\r\n                  <option value=\"Roster Move\">Roster Moves</option>\r\n                  <option value=\"Trade\">Trades</option>\r\n                  <option value=\"Trade Block\">Trade Block</option>\r\n                  <option value=\"Database Update\">Database Updates</option>         \r\n              </select>\r\n          </div>\r\n      \r\n          <!-- Date Filter -->\r\n          <div class=\"flex flex-col w-full md:w-auto\">\r\n              <label for=\"dateFilter\" class=\"text-left block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Filter by Date</label>\r\n              <select id=\"dateFilter\" (change)=\"setDateRange($event)\" class=\"bg-gray-50 border border-green-400 text-gray-900 text-sm rounded-lg focus:ring-green-400 focus:border-green-400 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-green-400 dark:focus:border-green-400 min-w-[160px]\">\r\n                  <option value=\"7\">This Week</option>\r\n                  <option value=\"30\">Last 30 days</option>\r\n                  <option value=\"90\">Last 3 months</option>\r\n                  <option value=\"365\">Last 12 months</option>\r\n                  <!--<option value=\"0\">Custom</option>-->          \r\n              </select>\r\n          </div>\r\n      \r\n          <!-- Custom Date Range \r\n          <div class=\"relative\">\r\n            <div class=\"flex flex-col w-full md:w-auto ml-auto md:ml-0\">\r\n              <label for=\"date-range-picker\" class=\"text-left block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Custom Date Range</label>\r\n              \r\n              <!-- Date Range Picker    \r\n              <div id=\"date-range-picker\" date-rangepicker class=\"relative flex items-center\">\r\n                  <!-- Start Date \r\n                  <div class=\"relative\">\r\n                      <div class=\"absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none\">\r\n                          <svg class=\"w-4 h-4 text-gray-500 dark:text-gray-400\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                              <path d=\"M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z\"/>\r\n                          </svg>\r\n                      </div>\r\n                      <input #datepickerRangeStart (change)=\"setStartDate($event)\" id=\"datepicker-range-start\" name=\"start\" type=\"text\" datepicker-format=\"yyyy-mm-dd\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-green-400 focus:border-green-400 block w-full max-w-48 ps-10 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-green-400 dark:focus:border-green-400\" placeholder=\"Select date start\">\r\n                  </div>\r\n          \r\n                  <span class=\"mx-2 text-gray-500\">to</span>\r\n          \r\n                  <!-- End Date \r\n                  <div class=\"relative\">\r\n                      <div class=\"absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none\">\r\n                          <svg class=\"w-4 h-4 text-gray-500 dark:text-gray-400\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                              <path d=\"M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z\"/>\r\n                          </svg>\r\n                      </div>\r\n                      <input #datepickerRangeEnd (change)=\"setEndDate($event)\" id=\"datepicker-range-end\" name=\"end\" type=\"text\" datepicker-format=\"yyyy-mm-dd\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-green-400 focus:border-green-400 block w-full max-w-48 ps-10 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-green-400 dark:focus:border-green-400\" placeholder=\"Select date end\">\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          \r\n          </div>-->\r\n      </div>\r\n               \r\n  </div>\r\n</div>\r\n\r\n<!-- Main Activity Log Table -->\r\n<div class=\"mb-4 rounded m:rounded-lg shadow-md border-2 max-h-[800px] overflow-x-auto whitespace-normal\">\r\n  <table class=\"w-full text-left rtl:text-right text-gray-500 dark:text-gray-400\">\r\n      <thead class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n      <tr class=\"border-b-2 sticky top-0\">\r\n          <th scope=\"col\" class=\"p-4 bg-gray-50 dark:bg-gray-700\">\r\n              \r\n          </th>\r\n          <th scope=\"col\" class=\"text-left p-4 bg-gray-50 dark:bg-gray-700\">\r\n              Description\r\n          </th>\r\n          <th scope=\"col\" class=\"hidden md:table-cell text-left p-4 bg-gray-50 dark:bg-gray-700\">\r\n              Type\r\n          </th>\r\n          <th scope=\"col\" \r\n              class=\"hidden md:table-cell p-4 bg-gray-50 dark:bg-gray-700 hover:text-gray-500 hover:cursor-pointer\"\r\n              [ngClass]=\"{'text-green-400 hover:text-green-600': sortingService.sortColumn === 'user_id'}\"\r\n              (click)=\"sortingService.toggleSort(filtered_activity_log, 'user_id')\"\r\n          >\r\n              <span class=\"flex items-center\">\r\n                  User\r\n                  <svg class=\"w-4 h-4 ms-1\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                      <path *ngIf=\"sortingService.sortColumn !== 'user_id'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m8 15 4 4 4-4m0-6-4-4-4 4\"/>\r\n                      <path *ngIf=\"sortingService.sortColumn === 'user_id' && sortingService.sortDirection === 'desc'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m19 9-7 7-7-7\"/>\r\n                      <path *ngIf=\"sortingService.sortColumn === 'user_id' && sortingService.sortDirection === 'asc'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m5 15 7-7 7 7\"/>   \r\n                  </svg>\r\n              </span>\r\n          </th>\r\n          <th scope=\"col\" \r\n              class=\"hidden md:table-cell p-4 bg-gray-50 dark:bg-gray-700 hover:text-gray-500 hover:cursor-pointer\"\r\n              [ngClass]=\"{'text-green-400 hover:text-green-600': sortingService.sortColumn === 'datetime'}\"\r\n              (click)=\"sortingService.toggleSort(filtered_activity_log, 'datetime');\"\r\n          >\r\n              <span class=\"flex items-center\">\r\n                  Date\r\n                  <svg class=\"w-4 h-4 ms-1\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                      <path *ngIf=\"sortingService.sortColumn !== 'datetime'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m8 15 4 4 4-4m0-6-4-4-4 4\"/>\r\n                      <path *ngIf=\"sortingService.sortColumn === 'datetime' && sortingService.sortDirection === 'desc'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m19 9-7 7-7-7\"/>\r\n                      <path *ngIf=\"sortingService.sortColumn === 'datetime' && sortingService.sortDirection === 'asc'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m5 15 7-7 7 7\"/>   \r\n                  </svg>\r\n              </span>\r\n          </th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let activity of filtered_activity_log | slice:(currentPage - 1) * pageSize : currentPage * pageSize;\" class=\"border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\">\r\n\r\n          <td class=\"py-2 px-2 md:px-4 dark:bg-gray-800\">\r\n              <div class=\"flex items-center\">\r\n                  <svg \r\n                  class=\"w-5 h-5 md:w-7 md:h-7\" \r\n                  [ngClass]=\"{\r\n                      'text-green-400': activity.action_type === 'add-player' || activity.action_type === 'create-player' || (activity.action_type === 'ir' && activity.message.includes('activated from')),\r\n                      'text-red-400': activity.action_type === 'drop-player' || (activity.action_type === 'ir' && activity.message.includes('placed on')),\r\n                      'text-blue-700': activity.action_type === 'trade' || activity.action_type === 'callup',\r\n                      'text-gray-800': activity.action_type === 'edit-player' || activity.action_type === 'edit-contract',\r\n                      'text-yellow-300': activity.action_type === 'trade-block',\r\n                  }\" \r\n                  aria-hidden=\"true\" \r\n                  xmlns=\"http://www.w3.org/2000/svg\" \r\n                  width=\"24\" \r\n                  height=\"24\" \r\n                  fill=\"none\" \r\n                  viewBox=\"0 0 24 24\">\r\n                      <path *ngIf=\"activity.action_type === 'add-player'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 7.757v8.486M7.757 12h8.486M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"/>\r\n                      <path *ngIf=\"activity.action_type === 'drop-player'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7.757 12h8.486M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"/>\r\n                      <path *ngIf=\"activity.action_type === 'create-player'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 12h4m-2 2v-4M4 18v-1a3 3 0 0 1 3-3h4a3 3 0 0 1 3 3v1a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1Zm8-10a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"/>\r\n                      <path *ngIf=\"activity.action_type === 'edit-player'\" stroke=\"currentColor\" stroke-linecap=\"square\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 19H5a1 1 0 0 1-1-1v-1a3 3 0 0 1 3-3h1m4-6a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm7.441 1.559a1.907 1.907 0 0 1 0 2.698l-6.069 6.069L10 19l.674-3.372 6.07-6.07a1.907 1.907 0 0 1 2.697 0Z\"/>\r\n                      <path *ngIf=\"activity.action_type === 'trade-block'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.583 8.445h.01M10.86 19.71l-6.573-6.63a.993.993 0 0 1 0-1.4l7.329-7.394A.98.98 0 0 1 12.31 4l5.734.007A1.968 1.968 0 0 1 20 5.983v5.5a.992.992 0 0 1-.316.727l-7.44 7.5a.974.974 0 0 1-1.384.001Z\"/>\r\n                      <path *ngIf=\"activity.action_type === 'trade'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16h13M4 16l4-4m-4 4 4 4M20 8H7m13 0-4 4m4-4-4-4\"/>\r\n                      <path *ngIf=\"activity.action_type === 'ir' && activity.message.includes('placed on')\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-width=\"2\" d=\"m6 6 12 12m3-6a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"/>\r\n                      <path *ngIf=\"activity.action_type === 'ir' && activity.message.includes('activated from')\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 9H8a5 5 0 0 0 0 10h9m4-10-4-4m4 4-4 4\"/>\r\n                      <path *ngIf=\"activity.action_type === 'callup'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 20V10m0 10-3-3m3 3 3-3m5-13v10m0-10 3 3m-3-3-3 3\"/>\r\n                      <path *ngIf=\"activity.action_type === 'edit-contract'\"stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 3v4a1 1 0 0 1-1 1H5m4 8h6m-6-4h6m4-8v16a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V7.914a1 1 0 0 1 .293-.707l3.914-3.914A1 1 0 0 1 9.914 3H18a1 1 0 0 1 1 1Z\"/>\r\n                        \r\n                  </svg>        \r\n              </div>\r\n          </td>            \r\n\r\n          <td class=\"items-left py-2 min-w-52 text-gray-900 whitespace-nowrap dark:text-white\">\r\n              <div class=\"flex items-center text-xs md:text-sm font-semibold text-gray-900 dark:text-white align-middle\">\r\n                {{ activity.message }} \r\n                <div *ngIf=\"isNew(activity)\">\r\n                  <span class=\"bg-green-400 text-white text-[9px] md:text-xs font-normal ml-1 md:ml-2 me-1 md:me-2 px-0.5 md:px-1.5 py-0.5 rounded border border-green-400\">\r\n                    New\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"block md:hidden italic text-gray-500 text-[9px] font-normal\">\r\n                {{ globalService.formatDateTime(activity.date, activity.time) }} by {{ getUser(activity.user_id) }}\r\n              </div>\r\n            \r\n              <div *ngIf=\"activity.action_type === 'trade'\" class=\"mt-2\">\r\n                <div class=\"flex\" *ngFor=\"let team of getTradePartners(activity.trade_id)\" class=\"mr-4 mb-2\">\r\n                    <span class=\"text-xs font-semibold text-gray-500\">{{ globalService.getTeamName(team) }} Receive</span>\r\n                    <ul class=\"pl-5\">\r\n                      <li *ngFor=\"let asset of getAssetsByTeam(activity.trade_id, team)\" class=\"text-xs text-gray-500\">\r\n                          <ng-container *ngIf=\"asset?.asset_type === 'player'\">\r\n                                  {{ asset?.first_name }} {{ asset?.last_name }} \r\n                                  <span class=\"font-normal text-[11px] text-gray-500\">&nbsp;{{ asset?.position }} - {{ asset?.short_code }} &nbsp;<span *ngIf=\"asset?.retention_perc\" class=\"font-semibold\">({{ asset?.retention_perc }}% RET)</span>&nbsp;&nbsp;</span>\r\n                          </ng-container>\r\n\r\n                          <ng-container *ngIf=\"asset?.asset_type === 'draft_pick'\">\r\n                              Round {{ asset?.round }}\r\n                              <span *ngIf=\"asset?.pick_number\">#{{ asset?.pick_number }}</span>\r\n                              - {{ globalService.capitalizeFirstLetter(asset?.type) }} ({{ asset?.year }})\r\n                          </ng-container>                              \r\n\r\n                          <ng-container *ngIf=\"asset?.asset_type === 'fa'\">\r\n                              FA Week {{ asset?.week }} ({{ asset?.year }})\r\n                          </ng-container>\r\n                      </li>\r\n                    </ul>\r\n                </div>\r\n              </div>\r\n            </td>\r\n                       \r\n          <td class=\"px-6 py-2 hidden md:table-cell text-sm\">\r\n              {{ formatActionType(activity.action_type) }}\r\n          </td>\r\n          <td class=\"px-6 py-2 hidden md:table-cell text-sm\">\r\n              {{ getUser(activity.user_id) }}\r\n          </td>\r\n          <td class=\"px-6 py-2 hidden md:table-cell text-sm\">\r\n              {{ globalService.formatDateTime(activity.date, activity.time) }}\r\n          </td>\r\n      </tr>\r\n      </tbody>\r\n  </table>\r\n</div>\r\n\r\n<!-- Pagination -->\r\n<div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-16\">\r\n  <div class=\"flex justify-center md:justify-start rounded text-gray-500\">\r\n     <p>Showing {{ getPageStart() }} to {{ getPageEnd() }} of {{ filtered_activity_log.length }} results</p>\r\n  </div>\r\n  <div class=\"flex items-center justify-center rounded dark:bg-gray-800\">\r\n     <nav aria-label=\"Page navigation example\">\r\n        <ul class=\"flex items-center -space-x-px h-8 text-sm\">\r\n          <li>\r\n            <button [disabled]=\"currentPage === 1\" (click)=\"previousPage()\" class=\"flex items-center justify-center px-4 h-8 ms-0 leading-tight text-gray-500 bg-white border border-e-0 border-gray-300 rounded-s-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\">\r\n              <span class=\"sr-only\">Previous</span>\r\n              <svg class=\"w-2.5 h-2.5 rtl:rotate-180\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\r\n                <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 1 1 5l4 4\"/>\r\n              </svg>\r\n           </button>\r\n          </li>\r\n          <li *ngFor=\"let page of generatePageArray()\">\r\n           <button (click)=\"setPage(page)\" \r\n                   [class]=\"currentPage === page ? 'flex items-center justify-center px-4 h-8 leading-tight text-white bg-green-400 border border-gray-300 hover:bg-green-500 hover:text-white dark:bg-green-600 dark:border-green-600 dark:text-white dark:hover:bg-blue-900 dark:hover:text-white' : 'flex items-center justify-center px-4 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'\"\r\n                   >\r\n             {{ page }}\r\n           </button>\r\n          <li>\r\n            <button [disabled]=\"currentPage === totalPages\" (click)=\"nextPage()\" class=\"flex items-center justify-center px-4 h-8 leading-tight text-gray-500 bg-white border border-gray-300 rounded-e-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\">\r\n              <span class=\"sr-only\">Next</span>\r\n              <svg class=\"w-2.5 h-2.5 rtl:rotate-180\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\r\n                <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m1 9 4-4-4-4\"/>\r\n              </svg>\r\n           </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n  </div>\r\n\r\n  <div class=\"flex justify-center md:justify-end items-center rounded dark:bg-gray-800\">\r\n     <select [(ngModel)]=\"pageSize\" (ngModelChange)=\"setPageSize($event)\" class=\"inline-flex items-center min-w-[60px] text-gray-500 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 font-medium rounded-lg text-sm px-3 py-1.5 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700\">         \r\n           <option value=\"25\">25</option>\r\n           <option value=\"50\">50</option>\r\n           <option value=\"100\">100</option>          \r\n     </select>  \r\n     <p class=\"px-3 text-gray-500\">results per page</p>\r\n\r\n  </div>      \r\n\r\n</div>","import { AfterViewInit, Component, ElementRef, ViewChild  } from '@angular/core';\r\nimport { GlobalService } from '../../../../services/global.service';\r\nimport { SortingService } from '../../../../services/sorting.service';\r\nimport { User, Activity, Asset } from '../../../../types';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TeamService } from '../../../../services/team.service';\r\ndeclare const window: any;\r\n\r\n@Component({\r\n  selector: 'app-league-activity',\r\n  templateUrl: './league-activity.component.html',\r\n  styleUrl: './league-activity.component.css',\r\n  standalone: false\r\n})\r\n\r\nexport class LeagueActivityComponent {\r\n  @ViewChild('datepickerRangeStart') datepickerRangeStart!: ElementRef;\r\n  @ViewChild('datepickerRangeEnd') datepickerRangeEnd!: ElementRef;\r\n  userSelectOpen: boolean = false;\r\n  league_id!: string;\r\n  searchKey: string = '';\r\n  searchRangeInDays: number = 7;\r\n  start_date: string = this.getSearchDate(7);\r\n  end_date: string = this.getSearchDate(0);\r\n  rangeIsCustom: boolean = false;\r\n  activity_log: Activity[] = [];\r\n  filtered_activity_log: Activity[] = [];\r\n  selected_users: User[] = [];\r\n  trade_items: Asset[] = [];\r\n  users: User[] = [];\r\n  activityFilter = 'all'\r\n  currentPage = 1;\r\n  totalPages!: number;\r\n  pageSize = 25;\r\n  tradeData: { [key: string]: { partners: string[], assetsByTeam: { [team_id: string]: any[] } } } = {};\r\n\r\n  constructor(\r\n    public globalService: GlobalService,\r\n    public sortingService: SortingService,\r\n    private teamService: TeamService,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.sortingService.sortDirection = 'desc';\r\n    this.sortingService.sortColumn = 'datetime';\r\n    this.route.paramMap.subscribe(params => {\r\n    this.league_id = params.get('league_id')!;\r\n    });\r\n    this.globalService.notifications = 0;\r\n    this.getActivitiesByDate();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const dropdownButton = document.getElementById('dropdownBgHoverButton');\r\n    const dropdownMenu = document.getElementById('dropdownBgHover');\r\n  \r\n    if (dropdownButton && dropdownMenu) {\r\n      dropdownButton.addEventListener('mouseenter', () => {\r\n        dropdownMenu.classList.remove('hidden');\r\n      });\r\n  \r\n      dropdownMenu.addEventListener('mouseleave', () => {\r\n        dropdownMenu.classList.add('hidden');\r\n      });\r\n    }\r\n  \r\n    /*const Datepicker = window.Flowbite.Datepicker;\r\n    const options = {\r\n      autoHide: true,\r\n      orientation: 'bottom',\r\n      autoSelectToday: true,\r\n      format: 'yyyy-mm-dd',\r\n      defaultDate: new Date(),\r\n    };\r\n  \r\n    const startDatepicker = new Datepicker(this.datepickerRangeStart.nativeElement, options);\r\n    const endDatepicker = new Datepicker(this.datepickerRangeEnd.nativeElement, options);\r\n  \r\n    this.datepickerRangeStart.nativeElement.addEventListener('focus', () => startDatepicker.show());\r\n    this.datepickerRangeEnd.nativeElement.addEventListener('focus', () => endDatepicker.show());\r\n  \r\n    document.addEventListener('click', (event) => {\r\n      if (!this.datepickerRangeStart.nativeElement.contains(event.target) && !this.datepickerRangeEnd.nativeElement.contains(event.target)) {\r\n        startDatepicker.hide();\r\n        endDatepicker.hide();\r\n        this.getActivitiesByDate();\r\n      }\r\n    });*/\r\n  }\r\n\r\n  toggleUserSelectMenu(isOpen: boolean): void {\r\n    this.userSelectOpen = isOpen;\r\n  } \r\n  \r\n  getSearchDate(days: number): string {\r\n      const today = new Date();\r\n      today.setDate(today.getDate() - days);\r\n      const formattedDate = `${today.getFullYear()}-${(today.getMonth() + 1).toString().padStart(2, '0')}-${today.getDate().toString().padStart(2, '0')}`;\r\n\r\n      return formattedDate;\r\n  }\r\n\r\n  setDateRange(event: Event): void {\r\n    const selectElement = event.target as HTMLSelectElement;\r\n    const days = parseInt(selectElement.value, 10);\r\n    \r\n    if (days === 0) { \r\n      this.rangeIsCustom = true; \r\n      return; \r\n    }\r\n    else {\r\n      this.start_date = this.getSearchDate(days);\r\n      this.end_date = this.getSearchDate(0);\r\n      this.getActivitiesByDate();\r\n    }\r\n  }\r\n\r\n  setStartDate(event: Event): void {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const start = inputElement.value;\r\n    \r\n    this.start_date = start;\r\n  }\r\n\r\n  setEndDate(event: Event): void {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const end = inputElement.value;\r\n    \r\n    this.end_date = end\r\n  }\r\n\r\n  getActivitiesByDate(): void {\r\n    const league_id = this.league_id;\r\n\r\n    if (league_id) {\r\n      this.globalService.getActivitiesByLeague(league_id, this.start_date, this.end_date)\r\n      .subscribe(response => {\r\n        this.users = response.users;\r\n        this.selected_users = this.users;\r\n        this.trade_items = response.tradeItems;\r\n        this.activity_log = response.action_log;\r\n        this.concatDateTimes(this.activity_log);\r\n        this.filterActivities();\r\n        this.sortingService.sort(this.filtered_activity_log, this.sortingService.sortColumn, this.sortingService.sortDirection);\r\n        this.totalPages = Math.ceil(this.filtered_activity_log.length / this.pageSize);\r\n      });\r\n    }\r\n  }\r\n\r\n  concatDateTimes(activity_log: any[]): any[] {\r\n    return activity_log.map(activity => {\r\n      const datetime = new Date(activity.date + ' ' + activity.time);\r\n      return {\r\n        ...activity,\r\n        datetime\r\n      };\r\n    });\r\n  }\r\n\r\n  searchActivities(): void {\r\n    if (this.searchKey === '') { this.resetSearch(); return; }\r\n    this.filterActivities();\r\n    this.totalPages = Math.ceil(this.filtered_activity_log.length / this.pageSize);\r\n    this.setPage(1);\r\n  }\r\n\r\n  resetSearch(): void {\r\n    this.searchKey = '';\r\n    this.filterActivities();\r\n    this.totalPages = Math.ceil(this.filtered_activity_log.length / this.pageSize);\r\n  }\r\n\r\n  isNew(activity: Activity): boolean {\r\n    if (this.globalService.loggedInUser) {\r\n        if (activity.date > this.globalService.loggedInUser.log_out_date) {\r\n            return true;\r\n        }\r\n        if (activity.date === this.globalService.loggedInUser.log_out_date && activity.time > this.globalService.loggedInUser.log_out_time) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getUser(user_id: string): string {\r\n    for (let user of this.users) {\r\n      if (user_id === user.user_name) {\r\n        return user.first_name + ' ' + user.last_name;\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  formatActionType(action: string): string {\r\n    if (action === 'ir' || action === 'callup') { return 'Roster Move'}\r\n    if (action === 'create-player' || action === 'edit-player' || action === 'edit-contract') { return 'Database Update'}\r\n    if (action === 'add-player' || action === 'drop-player') { return 'Add/Drop' }\r\n    if (action === 'trade') { return 'Trade' }\r\n    if (action === 'trade-block') { return 'Trade Block' }\r\n    return ''\r\n  }\r\n\r\n  filterActivities(): void {\r\n    this.filtered_activity_log = this.activity_log.filter(activity => this.inActivityTypeFilter(activity) && this.inUserFilter(activity) && activity.message.toLowerCase().includes(this.searchKey.toLowerCase()));\r\n    this.sortingService.sort(this.filtered_activity_log, this.sortingService.sortColumn, this.sortingService.sortDirection);\r\n    this.totalPages = Math.ceil(this.filtered_activity_log.length / this.pageSize);\r\n    this.setPage(1);\r\n  }\r\n\r\n  inActivityTypeFilter(activity: Activity): boolean {\r\n    if (this.activityFilter === 'all' || this.formatActionType(activity.action_type) === this.activityFilter) { return true }\r\n    return false;\r\n  }\r\n\r\n  inUserFilter(activity: Activity): boolean {\r\n    for (let user of this.selected_users) {\r\n      if (activity.user_id === user.user_name) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  toggleUserSelect(event: Event, user: User): void {\r\n    const checkbox = event.target as HTMLInputElement;\r\n  \r\n    if (checkbox.checked) {\r\n      this.selected_users.push(user);\r\n    } else {\r\n      this.selected_users = this.selected_users.filter(selectedUser => selectedUser.user_name !== user.user_name);\r\n    }\r\n    this.filterActivities();\r\n  }\r\n\r\n  isSelected(user: User): boolean {\r\n    for (let selectedUser of this.selected_users) {\r\n      if (selectedUser.user_name === user.user_name) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  deselectAllUsers(): void {\r\n    this.selected_users = [];\r\n    this.filterActivities();\r\n    this.currentPage = 1;\r\n  }\r\n\r\n  selectAllUsers(): void {\r\n    this.selected_users = this.users;\r\n    this.filterActivities();\r\n    this.currentPage = 1;\r\n  }\r\n\r\n  previousPage(): void {\r\n    if (this.currentPage > 1) {\r\n      this.currentPage--;\r\n    }\r\n  }\r\n\r\n  nextPage(): void {\r\n    if (this.currentPage < this.totalPages) {\r\n      this.currentPage++;\r\n    }\r\n  }\r\n\r\n  setPage(page: number): void {\r\n    this.currentPage = page;\r\n  }\r\n\r\n  getPageStart(): number {\r\n    return ((this.currentPage % this.pageSize) * this.pageSize) - (this.pageSize - 1);\r\n  }\r\n\r\n  getPageEnd(): number {\r\n    if (!this.filtered_activity_log) {\r\n      return 0; \r\n    }\r\n    return Math.min((this.currentPage % this.pageSize * this.pageSize), this.filtered_activity_log.length);\r\n  }\r\n  \r\n  generatePageArray(): number[] {\r\n    let array = [];\r\n  \r\n    if (this.currentPage <= 3) {\r\n      const maxPage = Math.min(5, this.totalPages);\r\n      for (let i = 1; i <= maxPage; i++) {\r\n        array.push(i);\r\n      }\r\n      return array;\r\n    }\r\n  \r\n    if (this.currentPage >= this.totalPages - 2) {\r\n      const startPage = Math.max(this.totalPages - 4, 1); \r\n      for (let i = startPage; i <= this.totalPages; i++) {\r\n        array.push(i);\r\n      }\r\n      return array;\r\n    }\r\n\r\n    for (let i = this.currentPage - 2; i <= this.currentPage + 2; i++) {\r\n      array.push(i);\r\n    }\r\n  \r\n    return array;\r\n  }\r\n  \r\n  setPageSize(size: number): void {\r\n    this.pageSize = size;\r\n    this.currentPage = 1;\r\n    this.totalPages = Math.ceil(this.filtered_activity_log.length / this.pageSize);\r\n  }\r\n\r\n  getTradePartners(trade_id: string): string[] {\r\n    const teamIdsSet = new Set<string>();\r\n  \r\n    this.trade_items.forEach(item => {\r\n      if (item && item.traded_to && item.trade_id === trade_id) {\r\n        teamIdsSet.add(item.traded_to);\r\n      }\r\n    });\r\n  \r\n    return Array.from(teamIdsSet);\r\n  }\r\n\r\n  getAssetsByTeam(trade_id: string, team_id: string): Asset[] {\r\n    const items = this.trade_items.filter(asset => asset?.trade_id === trade_id && asset?.traded_to === team_id);\r\n    return items\r\n  }\r\n  \r\n}\r\n","<div class=\"relative overflow-x-auto\">\r\n   <div class=\"grid grid-cols-2 gap-4\">\r\n      <div class=\"flex items-left rounded\">\r\n         <h1 class=\"font-bold text-2xl\">\r\n            Player Database\r\n         </h1>\r\n      </div>\r\n      <div class=\"flex items-right justify-end rounded\">\r\n         <button (click)=\"openModal(newPlayerModal)\" type=\"submit\" class=\"text-white bg-green-400 hover:bg-green-500 focus:outline-none font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-green-400 dark:hover:bg-green-500\">Add New Player</button>\r\n      </div>\r\n   </div>\r\n   \r\n   <div class=\"relative\">\r\n      <div class=\"flex flex-wrap items-start pt-4 pb-2 space-y-4 md:space-y-0 md:space-x-4\">\r\n         <!-- Search Bar -->\r\n         <div class=\"w-full md:w-auto flex flex-col\">\r\n           <label for=\"table-search\" class=\"block mb-1 text-sm font-medium text-gray-900 dark:text-white\">&nbsp;</label>\r\n           <div class=\"relative\">\r\n             <div class=\"absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none\">\r\n               <svg class=\"w-4 h-4 text-gray-500 dark:text-gray-400\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 20 20\">\r\n                 <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z\" />\r\n               </svg>\r\n             </div>\r\n             <input type=\"text\" [(ngModel)]=\"searchKey\" (input)=\"searchPlayers()\" id=\"table-search-users\" class=\"block p-2.5 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-full md:w-80 bg-gray-50 focus:ring-green-400 focus:border-green-400 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-green-400 dark:focus:border-green-400\" placeholder=\"Search players...\">\r\n           </div>\r\n         </div>\r\n       \r\n         <!-- Ownership Filter -->\r\n         <div class=\"w-full md:w-auto flex flex-col\">\r\n           <label for=\"ownership-filter\" class=\"block mb-1 text-sm font-medium text-gray-900 dark:text-white\">Filter by Status</label>\r\n           <select id=\"ownership-filter\" [(ngModel)]=\"statusFilter\" (ngModelChange)=\"filterPlayers()\" class=\"cursor-pointer bg-gray-50 border border-green-400 text-gray-900 text-sm rounded-lg focus:ring-green-400 focus:border-green-400 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-green-400 dark:focus:border-green-400 min-w-[150px]\">\r\n             <option value=\"all\">All Players</option>\r\n             <option value=\"available\">All Available</option>\r\n             <option value=\"affordable\">All Affordable</option>\r\n             <option value=\"owned\">All Owned</option>\r\n             <option value=\"active\">Active Players</option>\r\n             <option value=\"unsigned\">Unsigned</option>\r\n           </select>\r\n         </div>\r\n       \r\n         <!-- Position Filter -->\r\n         <div class=\"w-full md:w-auto flex flex-col\">\r\n           <label for=\"position-filter\" class=\"block mb-1 text-sm font-medium text-gray-900 dark:text-white\">Filter by Position</label>\r\n           <select id=\"position-filter\" [(ngModel)]=\"positionFilter\" (ngModelChange)=\"filterPlayers()\" class=\"cursor-pointer bg-gray-50 border border-green-400 text-gray-900 text-sm rounded-lg focus:ring-green-400 focus:border-green-400 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-green-400 dark:focus:border-green-400 min-w-[150px]\">\r\n             <option value=\"all\">Any Position</option>\r\n             <option value=\"skater\">All Skaters</option>\r\n             <option value=\"F\">Forwards</option>\r\n             <option value=\"D\">Defensemen</option>\r\n             <option value=\"G\">Goalies</option>\r\n           </select>\r\n         </div>\r\n       \r\n         <!-- Team Filter -->\r\n         <div class=\"w-full md:w-auto flex flex-col\">\r\n           <label for=\"team-filter\" class=\"block mb-1 text-sm font-medium text-gray-900 dark:text-white\">Filter by Team</label>\r\n           <select id=\"team-filter\" [(ngModel)]=\"teamFilter\" (ngModelChange)=\"filterPlayers()\" class=\"cursor-pointer bg-gray-50 border border-green-400 text-gray-900 text-sm rounded-lg focus:ring-green-400 focus:border-green-400 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-green-400 dark:focus:border-green-400 min-w-[150px]\">\r\n             <option value=\"all\">All Teams</option>\r\n             <option *ngFor=\"let team of globalService.teams\" [value]=\"team.team_name\">{{ team.team_name }}</option>\r\n           </select>\r\n         </div>\r\n       \r\n         <!-- Salary Range -->\r\n         <div class=\"w-full md:max-w-48 flex flex-col\">\r\n            <div class=\"relative md:mb-6\">\r\n               <label for=\"labels-range-input\" class=\"block mb-1 text-sm font-medium text-gray-900 dark:text-white\">Maximum Salary</label>\r\n               \r\n               <input id=\"labels-range-input\" type=\"range\" [(ngModel)]=\"maxSalary\" min=\"700000\" max=\"15000000\"\r\n                        (change)=\"filterPlayers()\"\r\n                        class=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700 range-slider\">\r\n               \r\n               <span class=\"text-sm text-gray-500 dark:text-gray-400 absolute start-0 -bottom-6\">\r\n                  ${{ maxSalary | number:'1.0-0' }}\r\n               </span>\r\n            </div>\r\n         </div>\r\n\r\n         <!-- Clear Filter Button -->\r\n         <div class=\"flex-grow flex justify-end w-full md:w-auto pr-3\">\r\n            <div class=\"mt-4 md:mt-12\">\r\n               <a (click)=\"clearFilter()\" class=\"cursor-pointer font-semibold text-sm text-blue-500 dark:text-blue-500 hover:underline\">Clear Filters</a>\r\n            </div>\r\n         </div>\r\n\r\n      </div>\r\n       \r\n   <!-- Main Player Table -->\r\n    <div class=\"overflow-x-auto mb-4 rounded m:rounded-lg shadow-md border-2 max-h-[800px]\">\r\n       <table class=\"w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\">\r\n         <thead class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n           <tr class=\"border-b-2 sticky top-0\">\r\n               <th scope=\"col\" class=\"p-1 md:p-4 bg-gray-50 dark:bg-gray-700\">\r\n                  \r\n               </th>\r\n               <th scope=\"col\" \r\n                  class=\"p-1 md:p-4 bg-gray-50 dark:bg-gray-700 hover:text-gray-500 hover:cursor-pointer\"\r\n                  [ngClass]=\"{'text-green-400 hover:text-green-600': sortingService.sortColumn === 'last_name'}\"\r\n                  (click)=\"sortingService.toggleSort(filteredPlayers, 'last_name')\"\r\n               >\r\n                  <span class=\"flex items-center\">\r\n                     Player\r\n                     <svg class=\"w-4 h-4 ms-1\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <path *ngIf=\"sortingService.sortColumn !== 'last_name'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m8 15 4 4 4-4m0-6-4-4-4 4\"/>\r\n                        <path *ngIf=\"sortingService.sortColumn === 'last_name' && sortingService.sortDirection === 'desc'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m19 9-7 7-7-7\"/>\r\n                        <path *ngIf=\"sortingService.sortColumn === 'last_name' && sortingService.sortDirection === 'asc'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m5 15 7-7 7 7\"/>   \r\n                     </svg>\r\n                  </span>\r\n               </th>\r\n               <th scope=\"col\" class=\"hidden md:table-cell text-left p-4 bg-gray-50 dark:bg-gray-700\">\r\n               Status\r\n               </th>\r\n               <th scope=\"col\" \r\n                  class=\"p-1 md:p-4 bg-gray-50 dark:bg-gray-700 hover:text-gray-500 hover:cursor-pointer\"\r\n                  [ngClass]=\"{'text-green-400 hover:text-green-600': sortingService.sortColumn === 'aav_current'}\"\r\n                  (click)=\"sortingService.toggleSort(filteredPlayers, 'aav_current')\"\r\n               >\r\n                  <span class=\"flex items-center\">\r\n                     AAV\r\n                     <svg class=\"w-4 h-4 ms-1\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <path *ngIf=\"sortingService.sortColumn !== 'aav_current'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m8 15 4 4 4-4m0-6-4-4-4 4\"/>\r\n                        <path *ngIf=\"sortingService.sortColumn === 'aav_current' && sortingService.sortDirection === 'desc'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m19 9-7 7-7-7\"/>\r\n                        <path *ngIf=\"sortingService.sortColumn === 'aav_current' && sortingService.sortDirection === 'asc'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m5 15 7-7 7 7\"/>   \r\n                     </svg>                    \r\n                  </span>\r\n               </th>\r\n               <th scope=\"col\" \r\n                  class=\"hidden md:table-cell p-4 bg-gray-50 dark:bg-gray-700 hover:text-gray-500 hover:cursor-pointer\"\r\n                  [ngClass]=\"{'text-green-400 hover:text-green-600': sortingService.sortColumn === 'years_left_current'}\"\r\n                  (click)=\"sortingService.toggleSort(filteredPlayers, 'years_left_current')\"\r\n               >\r\n                  <span class=\"flex items-center\">\r\n                     Years Left\r\n                     <svg class=\"w-4 h-4 ms-1\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <path *ngIf=\"sortingService.sortColumn !== 'years_left_current'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m8 15 4 4 4-4m0-6-4-4-4 4\"/>\r\n                        <path *ngIf=\"sortingService.sortColumn === 'years_left_current' && sortingService.sortDirection === 'desc'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m19 9-7 7-7-7\"/>\r\n                        <path *ngIf=\"sortingService.sortColumn === 'years_left_current' && sortingService.sortDirection === 'asc'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m5 15 7-7 7 7\"/>   \r\n                     </svg>\r\n                  </span>\r\n               </th>\r\n               <th scope=\"col\" class=\"hidden md:table-cell text-left p-4 bg-gray-50 dark:bg-gray-700\">\r\n                  Owned By\r\n               </th>\r\n               <th scope=\"col\" \r\n                  class=\"hidden md:table-cell p-1 md:p-4 bg-gray-50 dark:bg-gray-700 hover:text-gray-500 hover:cursor-pointer\"\r\n                  [ngClass]=\"{'text-green-400 hover:text-green-600': sortingService.sortColumn === 'last_updated'}\"\r\n                  (click)=\"sortingService.toggleSort(filteredPlayers, 'last_updated')\"\r\n               >\r\n                  <span class=\"flex items-center\">\r\n                     Last Updated\r\n                     <svg class=\"w-4 h-4 ms-1\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <path *ngIf=\"sortingService.sortColumn !== 'last_updated'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m8 15 4 4 4-4m0-6-4-4-4 4\"/>\r\n                        <path *ngIf=\"sortingService.sortColumn === 'last_updated' && sortingService.sortDirection === 'desc'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m19 9-7 7-7-7\"/>\r\n                        <path *ngIf=\"sortingService.sortColumn === 'last_updated' && sortingService.sortDirection === 'asc'\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m5 15 7-7 7 7\"/>   \r\n                     </svg>\r\n                  </span>\r\n               </th>\r\n               <th scope=\"col\" class=\"text-left p-4 bg-gray-50 dark:bg-gray-700\">\r\n               Edit\r\n               </th>\r\n           </tr>\r\n         </thead>\r\n         <tbody>\r\n           <tr *ngFor=\"let player of filteredPlayers | slice:(currentPage - 1) * pageSize : currentPage * pageSize;\" class=\"border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\">\r\n\r\n            <td class=\"p-1 md:p-4 dark:bg-gray-800\">\r\n               <div *ngIf=\"player.owned_by === null\" (click)=\"openModal(addPlayerModal, player); validatePickup(player)\" class=\"flex items-center\">\r\n                  <svg class=\"w-6 h-6 text-green-500 dark:text-white hover:fill-green-500 hover:text-white hover:cursor-pointer\" \r\n                       aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" \r\n                       width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                     <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" \r\n                           stroke-width=\"2\" \r\n                           d=\"M12 7.757v8.486M7.757 12h8.486M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"/>\r\n                  </svg>      \r\n               </div>\r\n            </td>            \r\n\r\n             <td class=\"flex items-left p-1 md:px-2 md:py-2 md:min-w-52 text-gray-900 whitespace-nowrap dark:text-white dark:bg-gray-800\">\r\n                <img class=\"w-8 h-8 md:w-10 md:h-10 rounded-full\" src=\"{{player.logo}}\" alt=\"Player image\">\r\n                <div class=\"ps-1.5 md:ps-3\">\r\n                  <div class=\"text-xs md:text-base font-semibold\">\r\n                     {{ player.first_name }} {{ player.last_name }}\r\n                     <svg (click)=\"openModal(editPlayerModal, player)\" class=\"hidden w-5 h-5 align-text-top text-gray-400 dark:text-white hover:text-gray-600 md:inline-flex ms-1 hover:cursor-pointer\" \r\n                           aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" \r\n                           width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" \r\n                              stroke-width=\"2\" \r\n                              d=\"m14.304 4.844 2.852 2.852M7 7H4a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h11a1 1 0 0 0 1-1v-4.5m2.409-9.91a2.017 2.017 0 0 1 0 2.853l-6.844 6.844L8 14l.713-3.565 6.844-6.844a2.015 2.015 0 0 1 2.852 0Z\"/>\r\n                     </svg>\r\n                  </div>\r\n                  <div class=\"hidden md:block font-normal text-gray-500\">\r\n                     {{ player.position }} - {{ player.short_code }} <span *ngIf=\"player.isRookie\" class=\"bg-green-100 text-green-800 text-[9px] font-medium ml-2 me-2 px-1.5 py-0.5 rounded dark:bg-gray-700 dark:text-green-400 border border-green-400\">Rookie Bank</span>\r\n                  </div>\r\n\r\n                  <!-- Mobile Display -->\r\n                  <div class=\"block md:hidden font-normal text-gray-500 text-[10px]\">\r\n                     <span class=\"ms-1 inline-flex md:hidden text-gray-500 font-normal\">{{ player.position }} - {{ player.short_code }} |&nbsp;</span>\r\n                     <div *ngIf=\"player.contract_status === 'Unsigned'\" class=\"inline-flex items-center text-red-600\">\r\n                        {{ player.contract_status }}\r\n                     </div>\r\n                     <div *ngIf=\"player.contract_status === 'Active'\" class=\"md:hidden inline-flex font-semibold\">\r\n                        {{ player.aav_current > 0 ? '$' +(player.aav_current | number:'1.0-0') : 'N/A' }} x {{ player.years_left_current }}\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </td>\r\n\r\n            <td class=\"hidden md:table-cell px-6 py-4\">\r\n               <div class=\"flex items-center\"\r\n                     [ngClass]=\"{\r\n                        'text-green-500': player.contract_status === 'Active',\r\n                         'text-red-600': player.contract_status === 'Unsigned'\r\n                     }\">\r\n                  <div \r\n                     class=\"h-2.5 w-2.5 rounded-full me-2\"\r\n                     [ngClass]=\"{\r\n                        'bg-green-500 text-green-500': player.contract_status === 'Active',\r\n                        'bg-red-600 text-red-600': player.contract_status === 'Unsigned'\r\n                     }\">\r\n                  </div> \r\n                  {{ player.contract_status }}\r\n                  <span *ngIf=\"player.isRookie\" class=\"inline-flex md:hidden bg-green-100 text-green-800 text-[9px] font-medium ml-1 me-1 px-py-0.5 rounded dark:bg-gray-700 dark:text-green-400 border border-green-400\">Rookie Bank</span>\r\n               </div>               \r\n            </td>\r\n            <td class=\"hidden md:table-cell px-6 py-4\">\r\n               {{ player.aav_current > 0 ? '$' +(player.aav_current | number:'1.0-0') : 'N/A' }}\r\n            </td>\r\n            <td class=\"hidden md:table-cell px-6 py-4\">\r\n               {{ player.years_left_current }}\r\n            </td>\r\n            <td class=\"p-1 md:px-6 md:py-4 text-xs md:text-sm text-right md:text-left\">\r\n               <ng-container *ngIf=\"player.owned_by; else unownedTemplate\">\r\n                   <a [routerLink]=\"['/', league_id, 'team', globalService.getTeamID(player.owned_by)]\" class=\"cursor-pointer font-medium text-green-500 dark:text-green-500 hover:underline\">\r\n                       {{ player.owned_by }}\r\n                   </a>\r\n               </ng-container>\r\n               <ng-template #unownedTemplate>\r\n                  Unowned\r\n               </ng-template>\r\n           </td>           \r\n           <td class=\"hidden md:table-cell px-6 py-4 text-xs\">\r\n               {{ globalService.getDate(player.last_updated) | date:'MM-dd-yyyy' }}<br>\r\n               <span class=\"italic\">by {{ player.updated_by }}</span>\r\n            </td>\r\n            <td class=\"p-1 md:px-6 md:py-4\">\r\n               <div class=\"hidden md:block\">\r\n                  <a (click)=\"openModal(editContractModal, player)\" class=\"text-xs md:text-sm cursor-pointer font-medium text-green-500 dark:text-green-500 hover:underline\">Edit Contract</a>\r\n               </div>\r\n               <div class=\"md:hidden flex items-center justify-center\" (click)=\"openModal(editContractModal, player)\">\r\n                  <svg class=\"w-6 h-6 text-gray-500 hover:text-gray-600 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                     <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M18 5V4a1 1 0 0 0-1-1H8.914a1 1 0 0 0-.707.293L4.293 7.207A1 1 0 0 0 4 7.914V20a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-5M9 3v4a1 1 0 0 1-1 1H4m11.383.772 2.745 2.746m1.215-3.906a2.089 2.089 0 0 1 0 2.953l-6.65 6.646L9 17.95l.739-3.692 6.646-6.646a2.087 2.087 0 0 1 2.958 0Z\"/>\r\n                   </svg>                   \r\n               </div>\r\n           </td>\r\n\r\n           </tr>\r\n         </tbody>\r\n       </table>\r\n     </div>\r\n     \r\n     <!-- Pagination -->\r\n     <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-16\">\r\n      <div class=\"flex justify-center md:justify-start rounded text-gray-500\">\r\n         <p>Showing {{ getPageStart() }} to {{ getPageEnd() }} of {{ filteredPlayers.length }} results</p>\r\n      </div>\r\n      <div class=\"flex items-center justify-center rounded dark:bg-gray-800\">\r\n         <nav aria-label=\"Page navigation example\">\r\n            <ul class=\"flex items-center -space-x-px h-8 text-sm\">\r\n              <li>\r\n                <button [disabled]=\"currentPage === 1\" (click)=\"previousPage()\" class=\"flex items-center justify-center px-4 h-8 ms-0 leading-tight text-gray-500 bg-white border border-e-0 border-gray-300 rounded-s-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\">\r\n                  <span class=\"sr-only\">Previous</span>\r\n                  <svg class=\"w-2.5 h-2.5 rtl:rotate-180\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\r\n                    <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 1 1 5l4 4\"/>\r\n                  </svg>\r\n               </button>\r\n              </li>\r\n              <li *ngFor=\"let page of generatePageArray()\">\r\n               <button (click)=\"setPage(page)\" \r\n                       [class]=\"currentPage === page ? 'flex items-center justify-center px-4 h-8 leading-tight text-white bg-green-400 border border-gray-300 hover:bg-green-500 hover:text-white dark:bg-green-600 dark:border-green-600 dark:text-white dark:hover:bg-blue-900 dark:hover:text-white' : 'flex items-center justify-center px-4 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'\"\r\n                       >\r\n                 {{ page }}\r\n               </button>\r\n              <li>\r\n                <button [disabled]=\"currentPage === totalPages\" (click)=\"nextPage()\" class=\"flex items-center justify-center px-4 h-8 leading-tight text-gray-500 bg-white border border-gray-300 rounded-e-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\">\r\n                  <span class=\"sr-only\">Next</span>\r\n                  <svg class=\"w-2.5 h-2.5 rtl:rotate-180\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\r\n                    <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m1 9 4-4-4-4\"/>\r\n                  </svg>\r\n               </button>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n      </div>\r\n\r\n      <div class=\"flex justify-center md:justify-end items-center rounded dark:bg-gray-800\">\r\n         <select [(ngModel)]=\"pageSize\" (ngModelChange)=\"setPageSize($event)\" class=\"inline-flex items-center min-w-[60px] text-gray-500 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 font-medium rounded-lg text-sm px-3 py-1.5 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700\">         \r\n               <option value=\"25\">25</option>\r\n               <option value=\"50\">50</option>\r\n               <option value=\"100\">100</option>          \r\n         </select>  \r\n         <p class=\"px-3 text-gray-500\">results per page</p>\r\n\r\n      </div>      \r\n\r\n   </div>\r\n     \r\n    \r\n   <!-- New Player Modal -->\r\n   <ng-template #newPlayerModal id=\"newPlayerModal\" tabindex=\"-1\" aria-hidden=\"true\" class=\"fixed top-0 left-0 right-0 z-50 items-center justify-center hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full\">\r\n      <div class=\"relative w-full max-w-2xl max-h-full\">\r\n            <form (ngSubmit)=\"playerFormSubmit($event)\" #playerForm=\"ngForm\" [attr.data-action]=\"'add'\" class=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\r\n\r\n               <div class=\"flex items-start justify-between p-4 rounded-t\">\r\n                  <h3 class=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                     Create New Player\r\n                  </h3>\r\n                  <button type=\"button\" (click)=\"closeModal()\" class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white\" data-modal-hide=\"editUserModal\">\r\n                  <svg class=\"w-3 h-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 14 14\">\r\n                     <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"/>\r\n                  </svg>\r\n                  <span class=\"sr-only\">Close modal</span>\r\n               </button>\r\n               </div>\r\n\r\n               <div class=\"p-6 space-y-6\">\r\n                  <div class=\"grid grid-cols-6 gap-6\">\r\n                     <div class=\"col-span-6 sm:col-span-3\">\r\n                           <label for=\"first-name\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">First Name</label>\r\n                           <input type=\"text\" [(ngModel)]=\"formData.first_name\" name=\"first-name\" id=\"first-name\" class=\"shadow-sm bg-gray-50  text-gray-900 text-sm rounded-lg border border-green-400 focus:ring-green-600 focus:border-green-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required=\"\">\r\n                     </div>\r\n                     <div class=\"col-span-6 sm:col-span-3\">\r\n                           <label for=\"last-name\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Last Name</label>\r\n                           <input type=\"text\" [(ngModel)]=\"formData.last_name\" name=\"last-name\" id=\"last-name\" class=\"shadow-sm bg-gray-50 text-gray-900 text-sm rounded-lg border border-green-400 focus:ring-green-600 focus:border-green-500 block w-full p-2.5 dark:bg-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required=\"\">\r\n                     </div>\r\n                     <div class=\"col-span-6 sm:col-span-3\">\r\n                           <label for=\"position\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Position</label>\r\n                           <select name=\"position\" [(ngModel)]=\"formData.position\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\r\n                              <option [value]=\"''\">Select position...</option>\r\n                              <option value=\"F\">Forward</option>\r\n                              <option value=\"D\">Defense</option>\r\n                              <option value=\"G\">Goalie</option>\r\n                           </select>\r\n                     </div>\r\n                     <div class=\"col-span-6 sm:col-span-3\">\r\n                        <label for=\"nhl_team\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">NHL Team</label>\r\n                        <select name=\"nhl_team\" [(ngModel)]=\"formData.short_code\"\r\n                              class=\"select-dropdown bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\r\n                        <option [value]=\"''\">Select team...</option>\r\n                        <option *ngFor=\"let team of globalService.nhl_teams\" [value]=\"team.short_code\">{{ team.city }} {{ team.team_name }}</option>\r\n                        </select>\r\n                     </div>                  \r\n                  </div>\r\n               </div>\r\n\r\n               <div class=\"flex items-center p-6 space-x-3 rtl:space-x-reverse rounded-b\">\r\n                  <button \r\n                     type=\"submit\" \r\n                     [disabled]=\"isButtonDisabled()\"\r\n                     class=\"text-white bg-green-400 hover:bg-green-500 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-green-400 dark:hover:bg-green-500 dark:focus:ring-green-800\"\r\n                     [ngClass]=\"{\r\n                        'bg-green-400 hover:bg-green-500 focus:ring-green-300': !isButtonDisabled(),\r\n                        'bg-green-300 cursor-not-allowed': isButtonDisabled()\r\n                     }\" \r\n                     >\r\n                     Create Player\r\n                  </button>\r\n                  <button type=\"button\" (click)=\"closeModal()\" class=\"text-green-400 bg-white hover:bg-green-500 hover:text-white border border-green-400 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-green-400 dark:hover:bg-green-500 dark:focus:ring-green-800\">Cancel</button>\r\n               </div>\r\n         </form>\r\n      </div>\r\n   </ng-template>\r\n\r\n   <!-- Edit Player Modal -->\r\n   <ng-template #editPlayerModal id=\"editTeamModal\" tabindex=\"-1\" aria-hidden=\"true\" class=\"fixed top-0 left-0 right-0 z-50 items-center justify-center hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full\">\r\n      <div class=\"relative w-full max-w-2xl max-h-full\">\r\n            <form (ngSubmit)=\"playerFormSubmit($event)\" #playerForm=\"ngForm\" [attr.data-action]=\"'edit'\" class=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\r\n   \r\n               <div class=\"flex items-start justify-between p-4 rounded-t\">\r\n                  <h3 class=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                     Edit Player Info for: <span class=\"bg-gray-100 text-gray-600 font-medium me-2 px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-gray-300\">{{ selected.first_name }} {{ selected.last_name }}</span>\r\n                  </h3>\r\n                  <button type=\"button\" (click)=\"closeModal()\" class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white\" data-modal-hide=\"editUserModal\">\r\n                  <svg class=\"w-3 h-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 14 14\">\r\n                     <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"/>\r\n                  </svg>\r\n                  <span class=\"sr-only\">Close modal</span>\r\n               </button>\r\n               </div>\r\n   \r\n               <div class=\"p-6 space-y-6\">\r\n                  <div class=\"grid grid-cols-6 gap-6\">\r\n                     <div class=\"col-span-6 sm:col-span-3\">\r\n                           <label for=\"first-name\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">First Name</label>\r\n                           <input type=\"text\" [(ngModel)]=\"formData.first_name\" name=\"first-name\" id=\"first-name\" class=\"shadow-sm bg-gray-50  text-gray-900 text-sm rounded-lg border border-green-400 focus:ring-green-600 focus:border-green-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" [placeholder]=\"selected.first_name\" required=\"\">\r\n                     </div>\r\n                     <div class=\"col-span-6 sm:col-span-3\">\r\n                           <label for=\"last-name\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Last Name</label>\r\n                           <input type=\"text\" [(ngModel)]=\"formData.last_name\" name=\"last-name\" id=\"last-name\" class=\"shadow-sm bg-gray-50 text-gray-900 text-sm rounded-lg border border-green-400 focus:ring-green-600 focus:border-green-500 block w-full p-2.5 dark:bg-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" [placeholder]=\"selected.last_name\" required=\"\">\r\n                     </div>\r\n                     <div class=\"col-span-6 sm:col-span-3\">\r\n                           <label for=\"position\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Position</label>\r\n                           <select name=\"position\" [(ngModel)]=\"formData.position\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\r\n                              <option [selected]=\"selected.position === 'F'\" value=\"F\">Forward</option>\r\n                              <option [selected]=\"selected.position === 'D'\" value=\"D\">Defense</option>\r\n                              <option [selected]=\"selected.position === 'G'\" value=\"G\">Goalie</option>\r\n                            </select>\r\n                     </div>\r\n                     <div class=\"col-span-6 sm:col-span-3\">\r\n                           <label for=\"nhl_team\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">NHL Team</label>\r\n                           <select name=\"nhl_team\" [(ngModel)]=\"formData.short_code\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\r\n                              <option *ngFor=\"let team of globalService.nhl_teams\" [value]=\"team.short_code\" [selected]=\"selected.short_code === team.short_code\">{{ team.city }} {{ team.team_name }}</option>\r\n                            </select>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n   \r\n               <div class=\"flex items-center p-6 space-x-3 rtl:space-x-reverse rounded-b\">\r\n                  <button type=\"submit\" class=\"text-white bg-green-400 hover:bg-green-500 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-green-400 dark:hover:bg-green-500 dark:focus:ring-green-800\">Save Changes</button>\r\n                  <button type=\"button\" (click)=\"closeModal()\" class=\"text-green-400 bg-white hover:bg-green-500 hover:text-white border border-green-400 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-green-400 dark:hover:bg-green-500 dark:focus:ring-green-800\">Cancel</button>\r\n               </div>\r\n         </form>\r\n      </div>\r\n   </ng-template>\r\n\r\n   <!-- Add To Roster Modal -->\r\n   <ng-template #addPlayerModal id=\"addPlayerModal\" tabindex=\"-1\" aria-hidden=\"true\" class=\"fixed top-0 left-0 right-0 z-50 items-center justify-center hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full\">\r\n      <div class=\"relative w-full max-w-2xl max-h-full\">\r\n            <form class=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\r\n\r\n               <div class=\"flex items-start justify-between p-4 rounded-t\">\r\n                  <h3 class=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                     Add <span class=\"bg-gray-100 text-gray-600 font-medium me-2 px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-gray-300\">{{selected.first_name }} {{ selected.last_name }}</span>to your roster?\r\n                  </h3>\r\n                  <button type=\"button\" (click)=\"closeModal()\" class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white\" data-modal-hide=\"editUserModal\">\r\n                  <svg class=\"w-3 h-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 14 14\">\r\n                     <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"/>\r\n                  </svg>\r\n                  <span class=\"sr-only\">Close modal</span>\r\n               </button>\r\n               </div>\r\n\r\n               <!-- Validation Timeline -->\r\n               <div class=\"p-6 space-y-6 md:w-[600px]\">\r\n                  <div class=\"items-center justify-center\">\r\n                     <ol class=\"flex items-center justify-center\">\r\n                        <li class=\"relative w-full mb-6\">\r\n                           <div class=\"flex items-center\">\r\n                              <div \r\n                                 class=\"z-10 flex items-center justify-center w-10 h-10 rounded-full ring-0 ring-white dark:ring-gray-900 shrink-0\"\r\n                                 [ngClass]=\"{'bg-green-400': contractIsValid(), 'bg-red-500': !contractIsValid()}\">\r\n                                 <svg class=\"w-6 h-6 text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                                 <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 3v4a1 1 0 0 1-1 1H5m4 8h6m-6-4h6m4-8v16a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V7.914a1 1 0 0 1 .293-.707l3.914-3.914A1 1 0 0 1 9.914 3H18a1 1 0 0 1 1 1Z\"/>\r\n                                 </svg>\r\n                              </div>\r\n                              <div class=\"flex w-full bg-gray-200 h-0.5 dark:bg-gray-700\"></div>\r\n                           </div>\r\n                           <div class=\"mt-3\">\r\n                              <h3 class=\"font-medium text-gray-900 dark:text-white\">Contracts</h3>\r\n                           </div>\r\n                     </li>\r\n                     <li class=\"relative w-full mb-6\">\r\n                        <div class=\"flex items-center\">\r\n                           <div class=\"flex w-[50%] bg-gray-200 h-0.5 dark:bg-gray-700\"></div>\r\n                           <div class=\"z-10 flex items-center justify-center w-10 h-10 rounded-full ring-0 ring-white dark:ring-gray-900 shrink-0\"\r\n                              [ngClass]=\"{'bg-green-400': capIsValid(selected), 'bg-red-500': !capIsValid(selected)}\">\r\n                              <svg class=\"w-6 h-6 text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                                 <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 17.345a4.76 4.76 0 0 0 2.558 1.618c2.274.589 4.512-.446 4.999-2.31.487-1.866-1.273-3.9-3.546-4.49-2.273-.59-4.034-2.623-3.547-4.488.486-1.865 2.724-2.899 4.998-2.31.982.236 1.87.793 2.538 1.592m-3.879 12.171V21m0-18v2.2\"/>\r\n                               </svg>                               \r\n                            </div>\r\n                            <div class=\"flex w-[50%] bg-gray-200 h-0.5 dark:bg-gray-700\"></div>\r\n                        </div>\r\n                        <div class=\"mt-3\">\r\n                            <h3 class=\"font-medium text-center text-gray-900 dark:text-white\">Cap space</h3>\r\n                        </div>\r\n                    </li>\r\n                     <li class=\"relative w-full mb-6\">\r\n                        <div class=\"flex items-center\">\r\n                              <div class=\"flex w-full bg-gray-200 h-0.5 dark:bg-gray-700\"></div>\r\n                              <div *ngIf=\"validatePickup(selected)\" class=\"z-10 bg-green-400 flex items-center justify-center w-10 h-10 rounded-full ring-0 ring-white dark:ring-gray-900 shrink-0\">\r\n                                    <svg class=\"w-5 h-5 text-white dark:text-blue-300\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 12\">\r\n                                       <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M1 5.917 5.724 10.5 15 1.5\"/>\r\n                                    </svg>\r\n                              </div>\r\n                              <div *ngIf=\"!validatePickup(selected)\" class=\"z-10 bg-red-500 flex items-center justify-center w-10 h-10 rounded-full ring-0 ring-white dark:ring-gray-900 shrink-0\">\r\n                                 <svg class=\"w-5 h-5 text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                                    <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18 17.94 6M18 18 6.06 6\"/>\r\n                                  </svg>                                  \r\n                           </div>\r\n                        </div>\r\n                        <div class=\"mt-3 text-right justify-end\">\r\n                           <h3 *ngIf=\"validatePickup(selected)\" class=\"font-medium text-gray-900 dark:text-white\">Pickup is Valid</h3>\r\n                           <h3 *ngIf=\"!validatePickup(selected)\" class=\"font-medium text-gray-900 dark:text-white\">Pickup is Invalid</h3>\r\n                        </div>\r\n                     </li>\r\n                  </ol>\r\n\r\n                  <!-- FA Select Dropdown -->\r\n                  <div *ngIf=\"validatePickup(selected)\">\r\n                     <div class=\"grid grid-cols-6 gap-6\">\r\n                        <div class=\"col-span-6 sm:col-span-3\">\r\n                           <label for=\"fa_pick\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">\r\n                              FA Asset Used:\r\n                           </label>\r\n                           \r\n                           <div class=\"relative max-h-[200px] overflow-y-auto\">\r\n                              <select\r\n                                 name=\"fa_pick\"\r\n                                 [(ngModel)]=\"fa_to_use\"\r\n                                 class=\"max-h-[200px] overflow-y-auto bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-green-400 focus:border-green-400 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-green-500 dark:focus:border-green-400\"\r\n                                 >\r\n                                 <ng-container *ngIf=\"fa_picks.length > 0; else noFaAvailable\">\r\n                                    <option *ngFor=\"let pick of fa_picks\" [value]=\"pick.asset_id\">\r\n                                       FA Week {{ pick.week }} ({{ pick.year }})\r\n                                    </option>\r\n                                 </ng-container>\r\n\r\n                                 <!-- Dummy option when fa_picks is empty -->\r\n                                 <ng-template #noFaAvailable>\r\n                                    <option value=\"\" disabled>--No FA available--</option>\r\n                                 </ng-template>\r\n                              </select>\r\n                           </div>\r\n                           \r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n \r\n                  <!-- Warnings -->\r\n                  <div *ngIf=\"!contractIsValid()\">\r\n                     <div class=\"flex items-center p-4 mb-4 text-sm text-red-800 border border-red-300 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400 dark:border-red-800\" role=\"alert\">\r\n                           <svg class=\"flex-shrink-0 inline w-4 h-4 me-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                              <path d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\"/>\r\n                           </svg>\r\n                           <span class=\"sr-only\">Info</span>\r\n                           <div>\r\n                              <span class=\"font-bold\">Roster is Full!</span><br> You can't carry any more contracts. Visit your <a class=\"underline cursor-pointer hover:font-semibold\" [routerLink]=\"['/', globalService.league?.league_id, 'team', globalService.loggedInTeam?.team_id]\" (click)=\"closeModal()\">team page</a> to make a roster move\r\n                           </div>\r\n                      </div>\r\n                  </div>\r\n   \r\n                  <div *ngIf=\"!capIsValid(selected)\">\r\n                     <div class=\"flex items-center p-4 mb-4 text-sm text-red-800 border border-red-300 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400 dark:border-red-800\" role=\"alert\">\r\n                        <svg class=\"flex-shrink-0 inline w-4 h-4 me-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                          <path d=\"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z\"/>\r\n                        </svg>\r\n                        <span class=\"sr-only\">Info</span>\r\n                        <div>\r\n                          <span class=\"font-bold\">Not enough cap space! (${{ globalService.loggedInTeam?.cap_space | number:'1.0-0' }}) </span><br> You don't have the cap space to add this player. Visit your <a class=\"underline cursor-pointer hover:font-semibold\" [routerLink]=\"['/', globalService.league?.league_id, 'team', globalService.loggedInTeam?.team_id]\" (click)=\"closeModal()\">team page</a> to make a roster move.\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n\r\n            <div class=\"flex items-center px-6 pb-6 space-x-3 rtl:space-x-reverse rounded-b\">\r\n               <button \r\n                  type=\"submit\" \r\n                  (click)=\"addPlayer(selected, false); closeModal()\" \r\n                  class=\"text-white focus:ring-4 focus:outline-none font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-green-400 dark:hover:bg-green-500 dark:focus:ring-green-800\"\r\n                  [ngClass]=\"{\r\n                     'bg-green-400 hover:bg-green-500 focus:ring-green-300': validatePickup(selected) && faIsValid(),\r\n                     'bg-green-300 cursor-not-allowed': !validatePickup(selected) || !faIsValid()\r\n                 }\" \r\n                 [disabled]=\"!validatePickup(selected) || !fa_to_use\">\r\n                     Add Player\r\n               </button>\r\n               <button type=\"submit\" (click)=\"closeModal()\" class=\"text-green-400 bg-white hover:bg-green-500 hover:text-white border border-green-400 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-green-400 dark:hover:bg-green-500 dark:focus:ring-green-800\">Cancel</button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   </ng-template>\r\n\r\n<!-- Edit Contract Modal -->\r\n<ng-template #editContractModal id=\"editContractModal\" tabindex=\"-1\" aria-hidden=\"true\" class=\"fixed top-0 left-0 right-0 z-50 items-center justify-center hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full\">\r\n   <div class=\"relative w-full max-w-2xl max-h-full\">\r\n         <form (ngSubmit)=\"contractFormSubmit($event)\" class=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\r\n\r\n            <div class=\"flex items-start justify-between p-4 rounded-t\">\r\n               <h3 class=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                  Editing Contract Info for: <span class=\"bg-gray-100 text-gray-600 font-medium me-2 px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-gray-300\">{{ selected.first_name }} {{ selected.last_name }}</span>\r\n               </h3>\r\n               <button type=\"button\" (click)=\"closeModal()\" class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white\" data-modal-hide=\"editUserModal\">\r\n               <svg class=\"w-3 h-3\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 14 14\">\r\n                  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"/>\r\n               </svg>\r\n               <span class=\"sr-only\">Close modal</span>\r\n            </button>\r\n            </div>\r\n\r\n            <div class=\"p-6 space-y-6\">\r\n               \r\n               <!-- Current Contract Fields -->\r\n               <h3 class=\"text-lg font-semibold text-green-400\">Current Contract</h3>\r\n               <div class=\"grid grid-cols-6 gap-6\">\r\n                  <div class=\"col-span-6 sm:col-span-3\">\r\n                        <label for=\"aav_current\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">AAV</label>\r\n                        <input type=\"number\" [(ngModel)]=\"formData.aav_current\" autocomplete=\"off\" name=\"aav_current\" id=\"aav_current\" class=\"shadow-sm bg-gray-50 text-gray-900 text-sm rounded-lg border border-green-400 focus:ring-green-600 focus:border-green-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" [placeholder]=\"selected.aav_current | number:'1.0-0'\" required=\"\">\r\n                        <div *ngIf=\"!selected.aav_next && !addNextContract\" class=\"py-4\">\r\n                           <a (click)=\"addContract()\" class=\"inline-flex items-center font-medium text-gray-400 dark:text-gray-400 hover:underline\">\r\n                              <svg class=\"w-4 h-4 text-gray-400 dark:text-white\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                                  <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 12h14m-7 7V5\"/>\r\n                              </svg>\r\n                              <span class=\"ml-1\">Add New</span>\r\n                          </a>                          \r\n                        </div>\r\n                  </div>\r\n                  <div class=\"col-span-6 sm:col-span-3\">\r\n                        <label for=\"years_left_current\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Years Left</label>\r\n                        <input type=\"number\" max=\"8\" min=\"0\" autocomplete=\"off\" [(ngModel)]=\"formData.years_left_current\" name=\"years_left_current\" id=\"years_left_current\" class=\"shadow-sm bg-gray-50 text-gray-900 text-sm rounded-lg border border-green-400 focus:ring-green-600 focus:border-green-500 block w-full p-2.5 dark:bg-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required=\"\">\r\n                  </div>\r\n               </div>\r\n\r\n               <!-- Next Contract Fields -->\r\n               <div *ngIf=\"addNextContract || selected.aav_next > 0\">\r\n                  <h3 class=\"text-lg font-semibold text-green-400\">Next Contract</h3>\r\n                  <div class=\"grid grid-cols-6 gap-6\">\r\n                     <div class=\"col-span-6 sm:col-span-3\">\r\n                        <label for=\"aav_next\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">AAV</label>\r\n                        <input type=\"number\" autocomplete=\"off\" [(ngModel)]=\"formData.aav_next\" name=\"aav_next\" id=\"aav_next\" class=\"shadow-sm bg-gray-50 text-gray-900 text-sm rounded-lg border border-green-400 focus:ring-green-600 focus:border-green-500 block w-full p-2.5 dark:bg-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required=\"\">\r\n                     </div>\r\n                     <div class=\"col-span-6 sm:col-span-3\">\r\n                        <label for=\"years_left_next\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Years Left</label>\r\n                        <input type=\"number\" max=\"8\" min=\"0\" autocomplete=\"off\" [(ngModel)]=\"formData.years_left_next\" name=\"years_left_next\" id=\"years_left_next\" class=\"shadow-sm bg-gray-50 text-gray-900 text-sm rounded-lg border border-green-400 focus:ring-green-600 focus:border-green-500 block w-full p-2.5 dark:bg-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" [placeholder]=\"selected.years_left_next\" required=\"\">\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n\r\n               <!-- Expiry Status -->\r\n               <div class=\"grid grid-cols-6 gap-6\">\r\n                  <div class=\"col-span-6 sm:col-span-3\">\r\n                     <label for=\"expiry_status\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Expiry Status</label>\r\n                     <select name=\"expiry_status\" [(ngModel)]=\"formData.expiry_status\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\r\n                        <option value=\"UFA\">UFA</option>\r\n                        <option value=\"RFA\">RFA</option>\r\n                     </select>\r\n                  </div>\r\n               </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"flex items-center p-6 space-x-3 rtl:space-x-reverse rounded-b\">\r\n               <button type=\"submit\" class=\"text-white bg-green-400 hover:bg-green-500 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-green-400 dark:hover:bg-green-500 dark:focus:ring-green-800\">Save Changes</button>\r\n               <button type=\"button\" (click)=\"closeModal()\" class=\"text-green-400 bg-white hover:bg-green-500 hover:text-white border border-green-400 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-green-400 dark:hover:bg-green-500 dark:focus:ring-green-800\">Cancel</button>\r\n            </div>\r\n      </form>\r\n   </div>\r\n</ng-template>       \r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\nimport { DraftComponent } from './components/draft/draft.component';\r\nimport { LeagueActivityComponent } from './components/league-activity/league-activity.component';\r\nimport { PlayerDatabaseComponent } from './components/player-database/player-database.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'draft', component: DraftComponent },\r\n  { path: 'activity-log', component: LeagueActivityComponent },\r\n  { path: 'players', component: PlayerDatabaseComponent },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DraftComponent,\r\n    LeagueActivityComponent,\r\n    PlayerDatabaseComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ModalModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    DraftComponent,\r\n    LeagueActivityComponent,\r\n    PlayerDatabaseComponent,\r\n  ]\r\n})\r\nexport class LeagueModule { }","import { Component, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GlobalService } from '../../../../services/global.service';\r\nimport { PlayerService } from '../../../../services/player.service';\r\nimport { SortingService } from '../../../../services/sorting.service';\r\nimport { TeamService } from '../../../../services/team.service';\r\nimport { ToastService } from '../../../../services/toast-service.service';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { Team, Player, FA_Pick } from '../../../../types';\r\n\r\ninterface Warning {\r\n  header: string,\r\n  message: string,\r\n  isRed: boolean\r\n}\r\n\r\n@Component({\r\n  selector: 'app-player-database',\r\n  templateUrl: './player-database.component.html',\r\n  styleUrl: './player-database.component.css',\r\n  standalone: false\r\n})\r\n\r\nexport class PlayerDatabaseComponent {\r\n  modalRef!: BsModalRef;\r\n  league_id!: string;\r\n  allPlayers!: Player[];\r\n  filteredPlayers: Player[] = [];\r\n  selected!: Player;\r\n  teams: Team[] = [];\r\n  fa_picks: FA_Pick[] = [];\r\n  fa_to_use!: string;\r\n  searchKey: string = '';\r\n  currentPage = 1;\r\n  totalPages!: number;\r\n  pageSize = 25;\r\n  statusFilter = 'all';\r\n  positionFilter = 'all';\r\n  teamFilter = 'all';\r\n  maxSalary: number = 15000000;\r\n  warnings: Warning[] = [];\r\n  formSubmitted: boolean = false;\r\n  addNextContract: boolean = false;\r\n  toastMessage: string = '';\r\n  formData = {\r\n    first_name: '',\r\n    last_name: '',\r\n    short_code: '',\r\n    position: '',\r\n    years_left_current: null as number | null,\r\n    aav_current: null as number | null,\r\n    years_left_next: null as number | null,\r\n    aav_next: null as number | null,\r\n    expiry_status: '',\r\n};\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private teamService: TeamService,\r\n    public globalService: GlobalService,\r\n    public sortingService: SortingService,\r\n    private modalService: BsModalService,\r\n    private toastService: ToastService,\r\n    private route: ActivatedRoute,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      this.sortingService.sortColumn = 'last_name';\r\n      this.sortingService.sortDirection = 'asc';\r\n      this.league_id = params.get('league_id')!;\r\n\r\n      this.playerService.getAllPlayers(this.league_id)\r\n        .subscribe(response => {\r\n          this.allPlayers = response.players;\r\n          this.filterPlayers();\r\n      });\r\n\r\n      if (this.globalService.loggedInTeam) {\r\n        this.fetchFAs(this.globalService.loggedInTeam);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  searchPlayers(): void {\r\n    if (this.searchKey === '') { this.resetSearch(); return; }\r\n    this.filterPlayers();\r\n  }\r\n\r\n  async fetchFAs(team: Team): Promise<void> {\r\n    this.teamService.getFAsByTeam(this.league_id, team.team_id)\r\n      .subscribe(response => {\r\n        this.fa_picks = response.fa_picks.filter(pick => pick.owned_by === this.globalService.loggedInTeam?.team_id && !pick.player_taken && this.faInRange(pick));\r\n        if (this.fa_picks.length > 0) {\r\n          this.fa_to_use = this.fa_picks[0].asset_id.toString();\r\n        }\r\n      });\r\n  }\r\n\r\n  faInRange(fa: FA_Pick): boolean {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n  \r\n    const twoDaysBefore = new Date(today);\r\n    twoDaysBefore.setDate(today.getDate() - 2);\r\n  \r\n    const eightDaysAfter = new Date(today);\r\n    eightDaysAfter.setDate(today.getDate() + 8);\r\n  \r\n    const expiryDate = new Date(fa.expiry_date);\r\n  \r\n    return expiryDate >= twoDaysBefore && expiryDate <= eightDaysAfter;\r\n  }\r\n\r\n  filterPlayers(): void {\r\n    this.filteredPlayers = this.allPlayers\r\n      .filter(player => \r\n              this.inPosFilter(player) \r\n              && this.inStatusFilter(player) \r\n              && this.inTeamFilter(player) \r\n              && this.inSalaryFilter(player) \r\n              && (player.first_name.toLowerCase().includes(this.searchKey.toLowerCase()) || player.last_name.toLowerCase().includes(this.searchKey.toLowerCase()))\r\n            );\r\n    this.sortingService.sort(this.filteredPlayers, this.sortingService.sortColumn, this.sortingService.sortDirection);\r\n    this.totalPages = Math.ceil(this.filteredPlayers.length / this.pageSize);\r\n    this.setPage(1);\r\n  }\r\n\r\n  clearFilter(): void {\r\n    this.searchKey = '';\r\n    this.statusFilter = 'all';\r\n    this.positionFilter = 'all';\r\n    this.teamFilter = 'all';\r\n    this.maxSalary = 15000000;\r\n    this.filterPlayers();\r\n  }\r\n\r\n  isSkater(player: Player): boolean {\r\n    return player.position === 'F' || player.position === 'D';\r\n  }\r\n\r\n  inPosFilter(player: Player): boolean {\r\n    if (this.positionFilter === 'all') { return true; }\r\n    if (this.positionFilter === 'skater' && this.isSkater(player)) { return true; }\r\n    return player.position === this.positionFilter;\r\n  }\r\n\r\n  inStatusFilter(player: Player): boolean {\r\n    if (this.statusFilter === 'all') { return true; }\r\n    if (this.statusFilter === 'available' && player.owned_by === null) { return true; }\r\n    if (this.statusFilter === 'unsigned' && player.contract_status === 'Unsigned') { return true; }\r\n    if (this.statusFilter === 'active' && player.contract_status === 'Active') { return true; }\r\n    if (this.statusFilter === 'owned' && player.owned_by !== null) { return true; }\r\n    if (this.globalService.loggedInTeam && player.owned_by === null && this.statusFilter === 'affordable' && player.aav_current <= this.globalService.loggedInTeam?.cap_space) { return true; }\r\n    return false;\r\n  }\r\n\r\n  inTeamFilter(player: Player): boolean {\r\n    return player.owned_by === this.teamFilter || this.teamFilter === 'all';\r\n  }\r\n\r\n  inSalaryFilter(player: Player): boolean {\r\n    return player.aav_current < this.maxSalary || player.contract_status === 'Unsigned';\r\n  }\r\n\r\n  resetSearch(): void {\r\n    this.searchKey = '';\r\n    this.filterPlayers();\r\n  }\r\n\r\n  previousPage(): void {\r\n    if (this.currentPage > 1) {\r\n      this.currentPage--;\r\n    }\r\n  }\r\n\r\n  nextPage(): void {\r\n    if (this.currentPage < this.totalPages) {\r\n      this.currentPage++;\r\n    }\r\n  }\r\n\r\n  setPage(page: number): void {\r\n    this.currentPage = page;\r\n  }\r\n\r\n  getPageStart(): number {\r\n    return ((this.currentPage % this.pageSize) * this.pageSize) - (this.pageSize - 1);\r\n  }\r\n\r\n  getPageEnd(): number {\r\n    if (!this.filteredPlayers) {\r\n      return 0; \r\n    }\r\n    return Math.min((this.currentPage % this.pageSize * this.pageSize), this.filteredPlayers.length);\r\n  }\r\n  \r\n  generatePageArray(): number[] {\r\n    let array = [];\r\n  \r\n    if (this.currentPage <= 3) {\r\n      const maxPage = Math.min(5, this.totalPages);\r\n      for (let i = 1; i <= maxPage; i++) {\r\n        array.push(i);\r\n      }\r\n      return array;\r\n    }\r\n  \r\n    if (this.currentPage >= this.totalPages - 2) {\r\n      const startPage = Math.max(this.totalPages - 4, 1); \r\n      for (let i = startPage; i <= this.totalPages; i++) {\r\n        array.push(i);\r\n      }\r\n      return array;\r\n    }\r\n\r\n    for (let i = this.currentPage - 2; i <= this.currentPage + 2; i++) {\r\n      array.push(i);\r\n    }\r\n  \r\n    return array;\r\n  }\r\n  \r\n  setPageSize(size: number): void {\r\n    this.pageSize = size;\r\n    this.setPage(1);\r\n    this.totalPages = Math.ceil(this.filteredPlayers.length / this.pageSize);\r\n  }\r\n\r\n  generateID(first_name: string, last_name: string): string {\r\n    const id = first_name.toLowerCase().replace(/\\s+/g, '') + '-' + last_name.toLowerCase().replace(/\\s+/g, '');\r\n    console.log(id)\r\n    return id;\r\n  }\r\n\r\n  validatePickup(player: Player): boolean {\r\n    return this.capIsValid(player) && this.contractIsValid();\r\n  }\r\n\r\n  capIsValid(player: Player): boolean {\r\n    if (this.globalService.loggedInTeam?.cap_space && player.aav_current > this.globalService.loggedInTeam?.cap_space) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  faIsValid(): boolean {\r\n    if (this.fa_to_use) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  contractIsValid(): boolean {\r\n    if (this.globalService.loggedInTeam?.roster_size && this.globalService.league?.max_roster_size) {\r\n      if (this.globalService.league?.max_roster_size <= this.globalService.loggedInTeam?.roster_size ) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  addPlayer(player: Player, rookie: boolean): void {\r\n    const payload = {\r\n      player_id: player.player_id,\r\n      league_id: this.league_id,\r\n      team_id: this.globalService.loggedInTeam?.team_id,\r\n      isRookie: rookie,\r\n      fa_used: this.fa_to_use,\r\n      action: 'add',\r\n      last_updated: this.globalService.getToday(),\r\n      updated_by: this.globalService.loggedInUser?.first_name + ' ' + this.globalService.loggedInUser?.last_name\r\n    }\r\n\r\n    this.http.post('api/players/add-drop', payload)\r\n    .subscribe({\r\n      next: (response) => {\r\n        console.log('Action recorded successfully:', response);\r\n        if (this.globalService.loggedInTeam && this.globalService.loggedInUser) {\r\n          this.globalService.updateTeamCap(this.globalService.loggedInTeam);\r\n\r\n          let message = player.first_name + ' ' + player.last_name + ' added from free agency by ' + this.globalService.loggedInTeam.team_name;\r\n          let action = 'add-player';\r\n          this.globalService.recordAction(this.league_id, this.globalService.loggedInUser?.user_name, action, message);\r\n\r\n          //this.fetchFAs(this.globalService.loggedInTeam);\r\n          this.ngOnInit;\r\n          this.toastService.showToast(message, true);\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error recording action:', error);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  playerFormSubmit(event: Event) {\r\n    const formElement = event.target as HTMLFormElement;\r\n    const action = formElement.getAttribute('data-action');\r\n\r\n    const submissionData = {\r\n      action: action,\r\n      player_id: action === 'edit' ? this.selected.player_id : this.generateID(this.formData.first_name, this.formData.last_name),\r\n      first_name: this.formData.first_name,\r\n      last_name: this.formData.last_name,\r\n      position: this.formData.position,\r\n      short_code: this.formData.short_code,\r\n      last_updated: this.globalService.getToday(),\r\n      updated_by: this.globalService.loggedInUser?.first_name + ' ' + this.globalService.loggedInUser?.last_name,\r\n    };\r\n\r\n    let message;\r\n    let action_type;\r\n    if (submissionData.action === 'add') {\r\n      message = submissionData.first_name + ' ' + submissionData.last_name + ' added to the player database.';\r\n      action_type = 'create-player';\r\n    }\r\n    else {\r\n      message = 'Saved changes to player profile for ' + submissionData.first_name + ' ' + submissionData.last_name + '.';\r\n      action_type = 'edit-player';\r\n    }\r\n    \r\n    this.http.post('/api/players/create-player', submissionData)\r\n      .subscribe({\r\n        next: (response) => {\r\n          \r\n          this.toastService.showToast(message, true);\r\n          console.log('Changes saved.', response);\r\n\r\n          this.formSubmitted = true;\r\n          setTimeout(() => {\r\n            this.formSubmitted = false;\r\n          }, 3000);\r\n          this.resetForm();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error submitting form', error, submissionData);\r\n        }\r\n      });\r\n\r\n      if (this.globalService.loggedInUser) {\r\n        this.globalService.recordAction(this.league_id, this.globalService.loggedInUser?.user_name, action_type, message);\r\n      }\r\n      \r\n      this.closeModal();\r\n      this.ngOnInit();\r\n  }\r\n\r\n  contractFormSubmit(event: Event) {\r\n    const submissionData = {\r\n      player_id: this.selected.player_id,\r\n      aav_current: this.formData.aav_current,\r\n      years_left_current: this.formData.years_left_current,\r\n      aav_next: this.formData.aav_next,\r\n      years_left_next: this.formData.years_left_next,\r\n      expiry_status: this.formData.expiry_status,\r\n      last_updated: this.globalService.getToday(),\r\n      updated_by: this.globalService.loggedInUser?.first_name + ' ' + this.globalService.loggedInUser?.last_name,\r\n    };\r\n\r\n    let message = '';\r\n    if (this.selected) {\r\n      message = 'Player contract information updated for ' + this.selected.first_name + ' ' + this.selected.last_name + '.';\r\n    }\r\n    \r\n    let action_type = 'edit-contract';\r\n    this.http.post('/api/players/edit-contract', submissionData)\r\n      .subscribe({\r\n        next: (response) => {\r\n          \r\n          this.toastService.showToast(message, true);\r\n\r\n          this.formSubmitted = true;\r\n          setTimeout(() => {\r\n            this.formSubmitted = false;\r\n          }, 3000);\r\n          this.resetForm();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error submitting form', error, submissionData);\r\n        }\r\n      });\r\n\r\n      if (this.globalService.loggedInUser) {\r\n        this.globalService.recordAction(this.league_id, this.globalService.loggedInUser?.user_name, action_type, message);\r\n      }\r\n      \r\n     this.closeModal();\r\n     this.ngOnInit();\r\n  }\r\n\r\n  addContract(): void {\r\n    this.addNextContract = !this.addNextContract;\r\n  }\r\n\r\n  selectPlayer(player: Player) {\r\n    this.selected = player;\r\n    this.formData.first_name = this.selected.first_name;\r\n    this.formData.last_name = this.selected.last_name;\r\n    this.formData.short_code = this.selected.short_code;\r\n    this.formData.position = this.selected.position;\r\n    this.formData.years_left_current = this.selected.years_left_current;\r\n    this.formData.aav_current = this.selected.aav_current;\r\n    this.formData.years_left_next = this.selected.years_left_next;\r\n    this.formData.aav_next = this.selected.aav_next;\r\n    this.formData.expiry_status = this.selected.expiry_status;\r\n  }\r\n\r\n  resetForm() {\r\n    this.formData.first_name = '';\r\n    this.formData.last_name = '';\r\n    this.formData.short_code = '';\r\n    this.formData.position = '';\r\n    this.formData.years_left_current = null;\r\n    this.formData.aav_current = null;\r\n    this.formData.years_left_next = null;\r\n    this.formData.aav_next = null;\r\n    this.formData.expiry_status = '';\r\n  }\r\n\r\n  isButtonDisabled(): boolean {\r\n    return this.formData.first_name === '' || this.formData.last_name === '' || this.formData.position === '' || this.formData.short_code === '';\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>, player?: Player): void {\r\n    if (player) {\r\n      this.selectPlayer(player);\r\n    }\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n\r\n  closeModal() {\r\n    this.modalRef.hide();\r\n    this.resetForm();\r\n    this.resetSearch();\r\n    this.addNextContract = false;\r\n  }\r\n\r\n}\r\n"],"x_google_ignoreList":[]}